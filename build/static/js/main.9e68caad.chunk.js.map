{"version":3,"sources":["assets/images/nav-logo.png","assets/images/fogg-logged-out-1.png","store/actions/actionTypes.js","saga/selectors.js","saga/auth.js","models/AirOffice.js","models/AirUser.js","saga/officeAdmin.js","saga/index.ts","store/utility.js","store/reducers/general.js","store/reducers/officeAdmin.js","store/reducers/auth.js","store/store.js","components/Login/LoginNavBar.js","components/Login/LoginForm.js","store/actions/auth.js","components/Login/Login.js","components/NavBar/navbar.js","pages/pageRoutingFunctions.js","pages/pageTitles.js","components/SideNavBar/sidenavbar.js","store/actions/general.js","components/UsersPage/usersTable.js","store/actions/officeAdmin.js","components/UsersPage/usersPage.js","components/Firebase/firebase.js","components/Firebase/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","SIGN_IN_USER","SIGN_IN_USER_SUCCESS","SIGN_IN_USER_ERROR","SIGN_OUT_USER","SIGN_OUT_USER_SUCCESS","SIGN_OUT_USER_ERROR","SET_UP_USER","SET_UP_USER_SUCCESS","SET_UP_USER_ERROR","LOAD_OFFICE_USERS","LOAD_OFFICE_USERS_SUCCESS","LOAD_OFFICE_USERS_ERROR","firebase","state","general","userSignInWatchSaga","userSignOutWatchSaga","watchSetUpUserSaga","userSignInWorkerSaga","userSignOutWorkerSaga","workerSetUpUserSaga","regenerator_default","a","wrap","_context","prev","next","takeLatest","actionTypes","stop","_marked","this","_context2","_marked2","_context3","_marked3","signInUser","payload","email","password","auth","signInWithEmailAndPassword","catch","error","action","_context4","select","selectors","sent","call","console","log","put","type","t0","_marked4","signOutUser","signOut","_context5","_marked5","setUpUser","uid","functions","httpsCallable","apiCall","then","result","response","data","_context6","_marked6","require","AirOffice","dict","Object","classCallCheck","name","building","floor","roomNo","floorNo","AirUser","firstName","lastName","offices","airOffices","key","office","push","loadOfficeUsersWatchSaga","loadOfficeUsersWorkerSaga","officeAdmin_marked","loadOfficeUsers","officeUID","userList","value","user","officeAdmin_marked2","sagas","objectSpread","authSagas","officeAdminSagas","updateObject","oldObject","updatedValues","initialState","isLoading","currentPage","reducer","arguments","length","undefined","signInError","userError","loadError","currentOfficeAdminUID","isLoadingUserData","adminOfficeList","regularUserPortalMode","officeAdmin","rootReducer","combineReducers","generalReducer","authReducer","officeAdminReducer","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","middleware","run","registerWithMiddleware","LoginNavBar","current","handleClick","e","react_default","createElement","AppBar_default","position","style","background","Grid_default","container","justify","alignItems","marginTop","marginBottom","height","width","src","React","Component","connect","LoginForm","handleSubmit","preventDefault","_this","props","form","validateFields","err","values","emailAddress","getFieldDecorator","card","className","row","col","span","cover","alt","SigninLogo","bordered","es_form","onSubmit","Item","rules","required","message","whitespace","pattern","input","prefix","icon","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","Form","create","dispatch","authActionCreators","Login","Login_LoginNavBar","align","Login_LoginForm","NavBar","handleSignOut","handleProfileClick","profileMenu","menu","onClick","Divider","mode","textAlign","border","dropdown","overlay","trigger","getPagePayload","pageName","officeAdminUsersPagePayload","SubMenu","Menu","MenuItemGroup","ItemGroup","SideNavBar","pageTitle","pagePayload","changePage","userType","defaultSelectedKeys","paddingLeft","title","map","defaultOpenKeys","actionCreators","columns","dataIndex","sorter","b","aName","bName","sortDirections","render","tag","filters","text","filterMultiple","onFilter","record","indexOf","IconButton_default","MoreHoriz_default","UsersTable","searchText","loadUserList","currentOfficeUID","table","rowKey","toString","dataSource","pagination","loading","actionCreator","UsersPage","usersTable","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","app","apps","initializeApp","App","setUpFirebase","weakProps","listener","onAuthStateChanged","usersPage","sidenavbar","navbar","renderPageContent","components_Login_Login","firebaseInstance","generalActionCreators","finalApp","BrowserRouter","es","src_App_0","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9e68caad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nav-logo.95664742.png\";","module.exports = __webpack_public_path__ + \"static/media/fogg-logged-out-1.81182dc8.png\";","export const SET_UP_FIREBASE = \"SET_UP_FIREBASE\";\n\nexport const SIGN_IN_USER = 'SIGN_IN_USER'; // used in redux-saga\nexport const SIGN_IN_USER_SUCCESS = 'SIGN_IN_USER_SUCCESS';\nexport const SIGN_IN_USER_ERROR = 'SIGN_IN_USER_ERROR';\n\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER'; // used in redux-saga\nexport const SIGN_OUT_USER_SUCCESS = 'SIGN_OUT_USER_SUCCESS';\nexport const SIGN_OUT_USER_ERROR = 'SIGN_OUT_USER_ERROR';\n\nexport const SET_UP_USER = 'SET_UP_USER'; // used in redux-saga\nexport const SET_UP_USER_SUCCESS = 'SET_UP_USER_SUCCESS';\nexport const SET_UP_USER_ERROR = 'SET_UP_USER_ERROR';\n\nexport const LOAD_OFFICE_USERS = 'LOAD_OFFICE_USER';\nexport const LOAD_OFFICE_USERS_SUCCESS = 'LOAD_OFFICE_USER_SUCCESS';\nexport const LOAD_OFFICE_USERS_ERROR = 'LOAD_OFFICE_USER_ERROR';\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\n","export const firebase = (state) => state.general.firebase; \n","import { takeLatest, call, put, select } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as selectors from './selectors';\nrequire(\"firebase/functions\");\n\n// Watchers\n\nexport function* userSignInWatchSaga() {\n    yield takeLatest(actionTypes.SIGN_IN_USER, userSignInWorkerSaga);\n}\n\nexport function* userSignOutWatchSaga() {\n    yield takeLatest(actionTypes.SIGN_OUT_USER, userSignOutWorkerSaga);\n  }\n\nexport function* watchSetUpUserSaga() {\n    yield takeLatest(actionTypes.SET_UP_USER, workerSetUpUserSaga);\n}\n\n/* -------------------------------------------------------------------------- */\n\nfunction signInUser(payload, firebase) {\n    const email = payload.email || null;\n    const password = payload.password || null;\n\n    return firebase.auth.signInWithEmailAndPassword(email, password)\n    .catch(error => {\n        throw error;\n    })\n  }\n\nfunction* userSignInWorkerSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(signInUser, action.payload, firebase);\n        // Need to properly parse call here\n        console.log(\"SIGN IN CALL SUCCESSFUL\");\n        yield put({ type: actionTypes.SIGN_IN_USER_SUCCESS });\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.SIGN_IN_USER_ERROR, payload: {error: error} });\n    }\n  }\n\n  /* -------------------------------------------------------------------------- */\n\n  function signOutUser(firebase) {\n      return firebase.auth.signOut()\n      .catch(error => {\n          throw error;\n      })\n    }\n\n  function* userSignOutWorkerSaga(action) {\n      try {\n          let firebase = yield select(selectors.firebase);\n          const response = yield call(signOutUser, firebase);\n          // Need to properly parse call here\n          console.log(\"SIGN OUT CALL SUCCESSFUL\");\n          yield put({ type: actionTypes.SIGN_OUT_USER_SUCCESS });\n      } catch (error) {\n          console.error(error);\n          yield put({ type: actionTypes.SIGN_OUT_USER_ERROR, payload: {error: error} });\n      }\n    }\n\n    /* -------------------------------------------------------------------------- */\n\nfunction setUpUser(payload, firebase) {\n    const uid = payload.uid || null;\n    const apiCall = firebase.functions.httpsCallable('getUserInfo')\n    return apiCall({uid: uid})\n    .then( result => {\n        console.log(result);\n        return result;\n    })\n  }\n\nfunction* workerSetUpUserSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(setUpUser, action.payload, firebase);\n        const data = response.data;\n        console.log(\"workerSetUpUserSaga - got response\");\n        yield put({ type: actionTypes.SET_UP_USER_SUCCESS, payload: {data: data}});\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.SET_UP_USER_ERROR, payload: {error: error} });\n    }\n  }\n","export default class AirOffice { \n    constructor(dict) {\n        const uid = dict.uid || null;\n        if (uid === null) { \n            return null\n        }\n        \n        const name = dict.name || null;\n        const building = dict.building || null;\n        const floor = dict.floor || null;\n        const roomNo = dict.roomNo || null;\n        \n        this.uid = uid;\n        this.name = name;\n        this.building = building;\n        this.floorNo = floor;\n        this.roomNo = roomNo;\n    }\n}\n//  var uid: String?\n//  var name: String?\n//  var building: AirBuilding?\n//  var floor: Int?\n//  var roomNo: Int?","import AirOffice from './AirOffice';\n\nexport default class AirUser { \n    constructor(dict) {\n        const uid = dict.uid || null;\n        if (uid === null) { \n            return null\n        }\n        \n        const firstName = dict.firstName || null;\n        const lastName = dict.lastName || null;\n        const email = dict.email || null;\n        const type = dict.type || null;\n        const offices = dict.offices || null;\n\n        this.uid = uid;\n        this.name = firstName+\" \"+lastName;\n        this.email = email;\n        this.type = type;\n\n        var airOffices = [];\n        for(let key in offices) { \n            const office = new AirOffice(offices[key]);\n            if (office) { \n                airOffices.push(office);\n            }\n        }\n        this.offices = airOffices;\n    }\n}","import { takeLatest, call, put, select } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as selectors from './selectors';\nimport AirUser from '../models/AirUser';\nrequire(\"firebase/functions\");\n\n// Watchers \n\nexport function* loadOfficeUsersWatchSaga() {\n    yield takeLatest(actionTypes.LOAD_OFFICE_USERS, loadOfficeUsersWorkerSaga);\n}\n\n// Workers \n\nfunction loadOfficeUsers(payload, firebase) { \n    const officeUID = payload.officeUID || null;\n    const apiCall = firebase.functions.httpsCallable('getAllUsersForOffice')\n    console.log(officeUID);\n    console.log('loadOfficeUsers');\n    return apiCall({officeUID: officeUID})\n    .then( result => { \n        console.log(\"loadOfficeUsers success: \"+result);\n        const data = result.data; \n        var userList = [];\n        for (let key in data) {\n            const value = data[key];\n            const user = new AirUser(value) || null;\n            if (user !== null) { \n                userList.push(user);\n            }\n        }\n        return userList;\n    })\n}\n\nfunction* loadOfficeUsersWorkerSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(loadOfficeUsers, action.payload, firebase);\n        console.log(response);\n        yield put({ type: actionTypes.LOAD_OFFICE_USERS_SUCCESS, payload: { userList: response }});\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.LOAD_OFFICE_USERS_ERROR, payload: {error: error} });\n    }\n  }","// import { all } from 'redux-saga/effects';\nimport * as authSagas from './auth';\nimport * as officeAdminSagas from './officeAdmin';\n\n// import watchSetUpFirebaseSaga from './setUpFirebase';\n// import watchSetUpUserSaga from \"./setUpUser\"; \n\nconst sagas: {[index: string]: any} = {\n    ...authSagas, \n    ...officeAdminSagas\n};\n\nexport default function registerWithMiddleware(middleware: { run: Function }) {\n    for (let name in sagas) {\n        middleware.run(sagas[name]);\n    }\n}\n\n// export default function* rootSaga() {\n//     yield all([\n//         watchSetUpUserSaga, \n//         watchSetUpFirebaseSaga\n//     ]);\n//   }","export const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    isLoading: false,\n    error: null,\n    firebase: null,\n    currentPage: null\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.SET_UP_FIREBASE:\n            console.log('reducers/general.js - SET_UP_FIREBASE');\n            let firebase = action.payload.firebase;\n            return updateObject(state, {firebase: firebase});\n        case actionTypes.SIGN_IN_USER:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.SIGN_IN_USER_SUCCESS:\n             return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SIGN_IN_USER_ERROR:\n             const signInError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: signInError});\n        case actionTypes.SET_UP_USER:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.SET_UP_USER_SUCCESS:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SIGN_OUT_USER:\n            return updateObject(state, {isLoading: true, error: null});\n         case actionTypes.SIGN_OUT_USER_SUCCESS:\n        case actionTypes.SIGN_OUT_USER_ERROR:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SET_UP_USER_ERROR:\n            const userError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: userError});\n        case actionTypes.LOAD_OFFICE_USERS:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.LOAD_OFFICE_USERS_SUCCESS:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.LOAD_OFFICE_USERS_ERROR:\n            const loadError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: loadError});\n        case actionTypes.CHANGE_PAGE:\n            const payload = action.payload || null;\n            return updateObject(state, {...payload})\n        default:\n            return state;\n    }\n    // return state;\n};\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    currentOfficeAdminUID: 'qGTShTzLuOI3uDXXNM6J',\n    userList: [], \n    isLoadingUserData: false\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.LOAD_OFFICE_USERS:\n            return updateObject(state, {isLoadingUserData: true});\n        case actionTypes.LOAD_OFFICE_USERS_SUCCESS:\n            // properly update state here \n            const userList = action.payload.userList || null;\n            return updateObject(state, {userList: userList, isLoadingUserData: false});\n        case actionTypes.LOAD_OFFICE_USERS_ERROR: \n            return updateObject(state, {isLoadingUserData: false});\n    }\n    return state;\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    user: null,\n    type: null,\n    adminOfficeList: null, \n    regularUserPortalMode: 'admin'\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.SIGN_OUT_USER_SUCCESS: \n            return initialState; \n        case actionTypes.SIGN_IN_USER:\n            break;\n        case actionTypes.SET_UP_USER_ERROR:\n            break;\n        case actionTypes.SET_UP_USER_SUCCESS:\n            const data = action.payload.data || null;\n            const type = data.type || null;\n            const adminOfficeList = data.officeAdmin || null;\n            return updateObject(state, {user: data, type: type, adminOfficeList: adminOfficeList});\n        case actionTypes.SET_UP_USER_ERROR:\n            return updateObject(state, {user: null});\n        default:\n            return state;\n    }\n    return state;\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport registerWithMiddleware from '../saga/index.ts';\n\nimport generalReducer from './reducers/general';\nimport officeAdminReducer from './reducers/officeAdmin';\nimport authReducer from './reducers/auth';\n\nconst rootReducer = combineReducers({\n    general: generalReducer,\n    auth: authReducer,\n    officeAdmin: officeAdminReducer\n });\n \n const sagaMiddleware = createSagaMiddleware();\n let middlewares = applyMiddleware(sagaMiddleware);\n\n const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n const store = createStore(rootReducer, composeEnhancer(middlewares));\n \n registerWithMiddleware(sagaMiddleware);\n \n export default store; ","import React from 'react';\nimport { connect } from 'react-redux';\n// import { Menu, Dropdown, Icon } from 'antd';\nimport AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport '../../App.css'\n\nclass LoginNavBar extends React.Component {\n    state = {\n        current: null,\n    }\n\n    handleClick = (e) => {\n        return\n    }\n\n    render() {\n\n      const styles = {\n        root: {\n          flexGrow: 1,\n        },\n      };\n\n\n        return (\n          <div>\n            <AppBar position=\"static\" style={{ background: 'transparent'}}>\n              <Grid container justify=\"center\" alignItems=\"center\" >\n                {/* <Avatar alt=\"Airspace Logo\"\n                src={ require('../../assets/images/nav-logo.png') }\n                className={'classes.avatar'}\n                style={{margin: 15,\n                  width: 90,\n                  height: 90,}}/> */}\n                  <img style={{ marginTop: 15, marginBottom: 15, height:40, width: 200}} src={require('../../assets/images/nav-logo.png')}></img>\n              </Grid>\n            </AppBar>\n\n          </div>\n\n        );\n    }\n}\n\nexport default connect(null, null)(LoginNavBar);\n","import React from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Card, Row, Col, Layout} from 'antd';\nimport SigninLogo from \"../../assets/images/fogg-logged-out-1.png\";\nimport { connect } from 'react-redux';\nimport * as authActionCreators from '../../store/actions/auth';\nimport '../../App.css'\nimport './Login.css'\n\n// To do:\n// handle forgot password\n// handle remember me\n// responsive card size\n\nclass LoginForm extends React.Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const email = values.emailAddress || null;\n        const password = values.password || null;\n        this.props.signInUser(email, password);\n      }\n    });\n  }\n\n  render() {\n\n    const { getFieldDecorator } = this.props.form;\n\n    // const {\n    //   Header, Footer, Sider, Content,\n    // } = Layout;\n\n    return (\n          <Card className=\"login-card\">\n            <Row>\n              <Col span={12}>\n                <Card\n                  cover={<img alt=\"example\" src={SigninLogo}/>}\n                  bordered={false}\n                >\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card bordered={false}>\n                  <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                      {getFieldDecorator('emailAddress', {\n                        rules: [{ required: true, message: 'Please input your email address!', whitespace: true, pattern: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+.)+([a-zA-Z0-9]{2,4})+$/ }],\n                      })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email Address\" />\n                      )}\n                    </Form.Item>\n                    <Form.Item>\n                      {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!', whitespace: true }],\n                      })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                      )}\n                    </Form.Item>\n                    <Form.Item>\n                      {getFieldDecorator('remember', {\n                        valuePropName: 'checked',\n                        initialValue: true,\n                      })(\n                        <Checkbox className=\"\">Remember me</Checkbox>\n                      )}\n                      <a className=\"login-form-forgot airspaceColor\" href=\"\">Forgot password?</a>\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button airspace-submit-button\">\n                        Log in\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                </Card>\n              </Col>\n            </Row>\n          </Card>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signInUser: (email, password) => dispatch(authActionCreators.signInUserAction(email, password))\n  }\n};\n\nexport default Form.create({ name: 'normal_login' })(connect(null, mapDispatchToProps)(LoginForm));\n","import * as actionTypes from './actionTypes';\n\nexport const setUpUserAction = (uid) => {\n    return {\n        type: actionTypes.SET_UP_USER,\n        payload: {\n            uid: uid\n        }\n    };\n}\n\nexport const signOutUserAction = () => {\n    return {\n        type: actionTypes.SIGN_OUT_USER,\n        payload: {\n        }\n    };\n}\n\nexport const signInUserAction = (email, password) => {\n    return {\n        type: actionTypes.SIGN_IN_USER,\n        payload: {\n            email: email,\n            password: password\n        }\n    };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LoginNavBar from './LoginNavBar';\nimport LoginForm from './LoginForm';\nimport { Row, Col } from 'antd';\nimport './Login.css'\n\n// To-do:\n// make sure successful sign in leaves page\n// show loading indicator\n// show error message\n\nclass Login extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <LoginNavBar/>\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n           <Col>\n              <LoginForm/>\n          </Col>\n        </Row>\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.general.error,\n    isLoading: state.general.isLoading\n  }\n};\n\nexport default connect(mapStateToProps, null)(Login);","import React from 'react';\nimport { Menu, Dropdown, Icon, Row, Col } from 'antd';\nimport { connect } from 'react-redux';\nimport * as authActionCreators from '../../store/actions/auth';\nimport '../../App.css'\n\n\nclass NavBar extends React.Component {\n  state = {\n    current: null,\n  }\n\n  handleSignOut = (e) => {\n    this.props.signOutUser();\n  }\n\n  handleProfileClick = (e) => {\n    switch (e.key) {\n      case 'Edit Profile':\n        console.log(\"Implement Edit Profile\")\n        break;\n      case 'SignOut':\n        console.log(\"Made it here\");\n        break\n    }\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    if (e.key == \"signout\") {\n      this.handleSignOut(e);\n    }\n    if (e.key == \"notifications\") {\n      console.log(\"Implement Notifications\");\n    }\n  }\n\n  render() {\n    const profileMenu = (\n      <Menu onClick={this.handleClick}>\n        <Menu.Item key=\"Edit Profile\">\n          <a>Edit Profile</a>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"signout\">\n          <a>Sign Out</a>\n        </Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Menu\n            onClick={this.handleClick}\n            mode=\"horizontal\"\n            style={{ textAlign: 'right', border: 0 }}\n          >\n            <Menu.Item key=\"notifications\">\n              <Icon type=\"bell\" />\n            </Menu.Item>\n\n            <Menu.Item key=\"profile\">\n              <Dropdown overlay={profileMenu} trigger={['click']}>\n                <a className=\"ant-dropdown-link\" href=\"#\">\n                  <Icon type=\"smile\" />\n                </a>\n              </Dropdown>\n            </Menu.Item>\n          </Menu>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOutUser: () => dispatch(authActionCreators.signOutUserAction())\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(NavBar);\n","import * as pageTitles from './pageTitles';\n\nconst getPagePayload = (pageName, payload) => { \n    switch (pageName) { \n        case pageTitles.userPageOfficeAdmin: \n            return officeAdminUsersPagePayload()\n        default: \n            return {}\n    }\n}\nexport default getPagePayload;\n\n const officeAdminUsersPagePayload = () => { \n    return { \n        currentPage: pageTitles.userPageOfficeAdmin, \n    }\n}","\nexport const userPageOfficeAdmin = \"userPageOfficeAdmin\"","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu, Icon } from 'antd';\nimport * as pageTitles from '../../pages/pageTitles';\nimport getPagePayload from '../../pages/pageRoutingFunctions';\nimport * as actionCreators from '../../store/actions/general';\nimport '../../App.css';\nimport './sideNavBar.css';\n\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nclass SideNavBar extends React.Component {\n  handleClick = (e) => {\n    var pageTitle = e.key;\n    const pagePayload = getPagePayload(pageTitle);\n    this.props.changePage(pagePayload);\n  }\n\n  render() {\n\n    const offices = ['Polsky North', 'Polsky South', 'Booth 205'];\n    if (this.props.userType == \"regular\") {\n      if (this.props.regularUserPortalMode == \"admin\") {\n        return (\n          <Menu\n            onClick={this.handleClick}\n            style={{ border: 0 }}\n            defaultSelectedKeys={['1']}\n            mode=\"inline\"\n            className=\"airspace-side-nav-bar\"\n          >\n            <img style={{ height: 30, width: 200, paddingLeft: 30 }} className=\"logo-nav-image\" src={require('../../assets/images/nav-logo.png')} />\n            <MenuItemGroup key=\"g2\" title=\"\" className=\"airspace-side-nav-bar-group\">\n                <Menu.Item key=\"home\">{<span><Icon type=\"home\" /><span>Home</span></span>}</Menu.Item>\n                <Menu.Item key={pageTitles.userPageOfficeAdmin} >{<span><Icon type=\"user\" /><span>Users</span></span>}</Menu.Item>\n                <Menu.Item key=\"conferenceRooms\">{<span><Icon type=\"user\" /><span>Conference Rooms</span></span>}</Menu.Item>\n                <Menu.Item key=\"hotDesks\">{<span><Icon type=\"user\" /><span>Hot Desks</span></span>}</Menu.Item>\n                <Menu.Item key=\"serviceRequests\">{<span><Icon type=\"user\" /><span>Service Requests</span></span>}</Menu.Item>\n                <Menu.Item key=\"registeredGuests\">{<span><Icon type=\"user\" /><span>Registered Guests</span></span>}</Menu.Item>\n                <SubMenu key=\"sub1\" title={<span><Icon type=\"up-square\" /><span>My Offices</span></span>}>\n                  <MenuItemGroup key=\"g1\" title=\"Offices\">\n                    {offices.map((office) => (\n                      <Menu.Item key={office}>{office}</Menu.Item>\n                    ))}\n                  </MenuItemGroup>\n                </SubMenu>\n            </MenuItemGroup>\n\n          </Menu>\n        );\n      } else if (this.props.regularUserPortalMode == \"regular\") {\n        return (\n          <Menu\n            onClick={this.handleClick}\n            style={{ width: 256, height: 100, border: 0 }}\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            mode=\"inline\"\n          >\n            <Menu.Item key=\"1\">{<span><Icon type=\"meh\" /><span>Implement Other Users</span></span>}</Menu.Item>\n          </Menu>\n        )\n      }\n    } else {\n      // if not a regular user\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    userType: state.auth.type,\n    adminOfficeList: state.auth.adminOfficeList,\n    regularUserPortalMode: state.auth.regularUserPortalMode\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: (payload) => dispatch(actionCreators.changePage(payload))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);\n","import * as actionTypes from './actionTypes';\n\nexport const setUpFirebaseInstanceAction = (firebaseInstance) => { \n    return {\n        type: actionTypes.SET_UP_FIREBASE, \n        payload: { \n            firebase: firebaseInstance\n        }\n    };\n}\n\nexport const changePage = (payload) => { \n    return {\n        type: actionTypes.CHANGE_PAGE, \n        payload: payload\n    };\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Tag, Icon} from 'antd';\n// import Highlighter from 'react-highlight-words';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\n\nimport * as actionCreator from '../../store/actions/officeAdmin';\n// import { stat } from 'fs';\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  // fix sorter to be alphabetical\n  sorter: (a, b) => {\n    const aName = a.name; \n    const bName = b.name;\n    if (aName < bName) { \n      return -1;\n    } else if (aName > bName) { \n      return 1;\n    } else { \n      return 0\n    }\n  },\n  sortDirections: ['descend', 'ascend'],\n}, \n{\n  title: 'Email',\n  dataIndex: 'email'\n},\n{\n  title: 'Offices',\n  dataIndex: 'offices',\n  render: (offices => (\n        <span>\n          {offices.map(office => <Tag color=\"blue\" key={office.uid}>{office.name}</Tag>)}\n        </span>\n      ))\n},\n{\n  // render appropriate admin or regular tag\n  title: 'Type',  \n  dataIndex: 'type',\n  filters: [{\n    text: 'Admin',\n    value: 'admin',\n  }, {\n    text: 'Regular',\n    value: 'regular',\n  }],\n  render: (type => (\n    <span>\n      <Tag color=\"blue\" key={type}>{type}</Tag>   \n     </span>\n  )),\n  filterMultiple: true,\n  onFilter: (value, record) => record.type.indexOf(value) === 0\n},  \n{\n  title: '',\n  key: 'more',\n  render: () => (\n    <IconButton>\n      <MoreIcon/>\n    </IconButton>\n  ),\n}];\n\nclass UsersTable extends React.Component {\n  state = {\n    searchText: '',\n  };\n\n   componentDidMount() { \n    this.props.loadUserList(this.props.currentOfficeUID);\n   }\n\n  render() {\n    return (\n      // customize empty state locale={{ emptyText: 'No Users'}}\n      <Table rowKey={record => record.uid.toString()} columns={columns} dataSource={this.props.userList} pagination={false} loading={this.props.isLoadingUserData}/>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.officeAdmin.userList, \n    currentOfficeUID: state.officeAdmin.currentOfficeAdminUID, \n    isLoadingUserData: state.officeAdmin.isLoadingUserData\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadUserList: (officeUID) => dispatch(actionCreator.loadOfficeUsers(officeUID))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersTable);\n","import * as actionTypes from './actionTypes';\n\nexport const loadOfficeUsers = (officeUID) => { \n    return {\n        type: actionTypes.LOAD_OFFICE_USERS, \n        payload: { \n            officeUID: officeUID\n        }\n    };\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'antd';\nimport UsersTable from './usersTable';\n// import UsersSideBar from './usersSideBar';\nimport '../../App.css';\n\nclass UsersPage extends React.Component {\n    render() {\n        return (\n            <Row>\n                <Col className=\"wide-table\" span={24}>\n                    <div>\n                        <h1>Users</h1>\n                        <Button className=\"right-button\" type=\"primary\" >Add User</Button>\n                    </div>\n                    <UsersTable />  \n                </Col>\n                {/* <Col span={4}>\n                    <UsersSideBar />\n                </Col> */}\n            </Row>\n        );\n    }\n}\n\nexport default connect(null, null)(UsersPage);\n\n","import app from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/functions';\n// const app = require(\"firebase\");\n// require(\"firebase/functions\");\n\nconst prodConfig = {\n    apiKey: \"AIzaSyBPUBLiY-FCuqpJLVibdr-RoiUt4wzbaLE\",\n    authDomain: \"airspace-management-app.firebaseapp.com\",\n    databaseURL: \"https://airspace-management-app.firebaseio.com\",\n    projectId: \"airspace-management-app\",\n    storageBucket: \"airspace-management-app.appspot.com\",\n    messagingSenderId: \"927508779333\"\n  };\n  \n// User this when I want to set up a dev version\n//   const devConfig = {\n//     apiKey: process.env.REACT_APP_DEV_API_KEY,\n//     authDomain: process.env.REACT_APP_DEV_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DEV_DATABASE_URL,\n//     projectId: process.env.REACT_APP_DEV_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_DEV_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_DEV_MESSAGING_SENDER_ID,\n//   };\n//  process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\nvar config = prodConfig;\n\nclass Firebase {\n\n  constructor() {\n\n    if (!app.apps.length) {\n      app.initializeApp(config);\n    } \n    this.auth = app.auth();\n    this.functions = app.functions();     \n  }\n}\n\nexport default Firebase;","// import { FirebaseContext, withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\n// export {FirebaseContext, withFirebase };","import React, { Component } from 'react';\n// import { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Login from './components/Login/Login';\nimport NavBar from './components/NavBar/navbar';\nimport SideNavbar from './components/SideNavBar/sidenavbar';\nimport UsersPage from './components/UsersPage/usersPage';\nimport Firebase from './components/Firebase';\n\nimport * as generalActionCreators from './store/actions/general';\nimport * as authActionCreators from './store/actions/auth';\nimport {Row, Col, Icon} from 'antd';\nimport * as pageTitles from './pages/pageTitles';\n\nclass App extends Component {\n\n  componentWillMount() {\n    if (this.props.firebase === null) {\n      this.firebase = new Firebase()\n      this.props.setUpFirebase(this.firebase);\n    }\n  }\n\n  componentDidMount() {\n    const firebase = this.firebase || null;\n    if (firebase) {\n      console.log(\"firebase SET UP in App.js render()\");\n      const weakProps = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(function(user) {\n        if (user) {\n          console.log('auth listener found user');\n          weakProps.setUpUser(user.uid);\n        } else {\n          console.log('auth listener did NOT find user');\n          // Need to dispatch sign out action here\n          // This action would set global state in redux to null for user\n          weakProps.setUpUser(null);\n          return;\n        }\n      });\n    } else {\n      console.log(\"firebase NOT set up in App.js render()\");\n      // this.props.setUpFirebase();\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  renderPageContent(pageName) {\n\n    switch (pageName) { \n      case pageTitles.userPageOfficeAdmin: \n        return (\n          <UsersPage />\n        );\n      default: \n          // return 404 page? \n          return null\n    }\n  }\n\n  render() {\n\n    // need to set state for employee or admin mode? which office?\n    // - need to setuser type ? figure out back end?\n    // need to set state for logged in in redux\n\n    if (this.props.user) { // logged in\n      return (\n        <div>\n          <Row>\n            <Col span={4}>\n              <SideNavbar />\n            </Col>\n            <Col span={20}>\n              <NavBar/>\n              {/* <UsersPage /> */}\n              {this.renderPageContent(this.props.currentPage)}\n            </Col>\n          </Row>\n        </div>\n      );\n    } else { // logged out\n\n      // Need to also remove ability to route to any other pages !!!\n      return (\n        <Login />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    isLoading: state.general.isLoading,\n    error: state.general.error,\n    firebase: state.general.firebase,\n    currentPage: state.general.currentPage\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUpFirebase: (firebaseInstance) => dispatch(generalActionCreators.setUpFirebaseInstanceAction(firebaseInstance)),\n    setUpUser: (uid) => dispatch(authActionCreators.setUpUserAction(uid))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App'; \nimport { BrowserRouter }from 'react-router-dom';\n\nconst finalApp = ( \n    <BrowserRouter>\n            <Provider store={store}> \n                <App />\n            </Provider>\n    </BrowserRouter>\n);\nReactDOM.render(finalApp, document.getElementById('root'));\n\n\n"],"sourceRoot":""}