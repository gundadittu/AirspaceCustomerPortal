{"version":3,"sources":["assets/images/nav-logo.png","assets/images/fogg-logged-out-1.png","store/actions/actionTypes.js","saga/selectors.js","models/AirOffice.js","saga/auth.js","models/AirUser.js","saga/officeAdmin.js","saga/index.ts","store/utility.js","store/reducers/general.js","pages/pageTitles.js","store/reducers/officeAdmin.js","store/reducers/auth.js","store/store.js","components/Login/LoginNavBar.js","components/Login/LoginForm.js","store/actions/auth.js","components/Login/Login.js","components/NavBar/navbar.js","pages/pageRoutingFunctions.js","components/SideNavBar/sidenavbar.js","store/actions/general.js","components/UsersPage/usersTable.js","store/actions/officeAdmin.js","components/UsersPage/usersPage.js","components/Firebase/firebase.js","components/Firebase/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","SIGN_IN_USER","SIGN_IN_USER_SUCCESS","SIGN_IN_USER_ERROR","SIGN_OUT_USER","SIGN_OUT_USER_SUCCESS","SIGN_OUT_USER_ERROR","SET_UP_USER","SET_UP_USER_SUCCESS","SET_UP_USER_ERROR","LOAD_OFFICE_USERS","LOAD_OFFICE_USERS_SUCCESS","LOAD_OFFICE_USERS_ERROR","firebase","state","general","AirOffice","dict","Object","classCallCheck","this","uid","name","building","floor","roomNo","floorNo","userSignInWatchSaga","userSignOutWatchSaga","watchSetUpUserSaga","userSignInWorkerSaga","userSignOutWorkerSaga","workerSetUpUserSaga","regenerator_default","a","wrap","_context","prev","next","takeLatest","actionTypes","stop","_marked","_context2","_marked2","_context3","_marked3","signInUser","payload","email","password","persistMode","rememberMe","auth","setPersistence","then","signInWithEmailAndPassword","catch","error","console","action","_context4","select","selectors","sent","call","log","put","type","t0","_marked4","signOutUser","signOut","_context5","_marked5","setUpUser","functions","httpsCallable","apiCall","result","data","adminOffices","key","officeAdmin","officeDict","office","push","userOffices","offices","response","_context6","_marked6","AirUser","firstName","lastName","airOffices","airAdminOffices","officeAdmins","loadOfficeUsersWatchSaga","loadOfficeUsersWorkerSaga","officeAdmin_marked","loadOfficeUsers","officeUID","userList","value","user","officeAdmin_marked2","require","sagas","objectSpread","authSagas","officeAdminSagas","updateObject","oldObject","updatedValues","initialState","isLoading","currentPage","regularUserPortalMode","currentOfficeAdminUID","reducer","arguments","length","undefined","signInError","userError","loadError","homePageOfficeAdmin","isLoadingUserData","currentpage","pageTitles","adminOfficeList","rootReducer","combineReducers","generalReducer","authReducer","officeAdminReducer","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","middleware","run","registerWithMiddleware","LoginNavBar","current","handleClick","e","react_default","createElement","AppBar_default","position","style","background","Grid_default","container","justify","alignItems","className","src","React","Component","connect","LoginForm","handleSubmit","preventDefault","_this","props","form","validateFields","err","values","emailAddress","remember","getFieldDecorator","card","row","col","span","cover","alt","SigninLogo","bordered","es_form","onSubmit","Item","rules","required","message","whitespace","pattern","input","prefix","icon","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","Form","create","dispatch","authActionCreators","Login","Login_LoginNavBar","align","Login_LoginForm","NavBar","handleSignOut","handleProfileClick","profileMenu","menu","onClick","Divider","mode","textAlign","border","dropdown","overlay","trigger","getPagePayload","pageName","officeAdminHomePagePayload","officeAdminUsersPagePayload","regularUserHomePagePayload","SubMenu","Menu","MenuItemGroup","ItemGroup","SideNavBar","pageTitle","pagePayload","changePage","handleOfficeAdminClick","_this2","sideBarLogo","height","width","paddingLeft","switchPortalSubMenu","title","map","userType","defaultSelectedKeys","defaultOpenKeys","actionCreators","columns","dataIndex","sorter","b","aName","bName","sortDirections","render","tag","filterMultiple","onFilter","record","indexOf","IconButton_default","MoreHoriz_default","UsersTable","searchText","loadUserList","currentOfficeUID","table","rowKey","toString","dataSource","pagination","loading","actionCreator","UsersPage","usersTable","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","app","apps","initializeApp","App","setUpFirebase","weakProps","listener","onAuthStateChanged","usersPage","sidenavbar","navbar","renderPageContent","components_Login_Login","firebaseInstance","generalActionCreators","finalApp","BrowserRouter","es","storeFile","src_App_0","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89262156.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nav-logo.95664742.png\";","module.exports = __webpack_public_path__ + \"static/media/fogg-logged-out-1.81182dc8.png\";","export const SET_UP_FIREBASE = \"SET_UP_FIREBASE\";\n\nexport const SIGN_IN_USER = 'SIGN_IN_USER'; // used in redux-saga\nexport const SIGN_IN_USER_SUCCESS = 'SIGN_IN_USER_SUCCESS';\nexport const SIGN_IN_USER_ERROR = 'SIGN_IN_USER_ERROR';\n\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER'; // used in redux-saga\nexport const SIGN_OUT_USER_SUCCESS = 'SIGN_OUT_USER_SUCCESS';\nexport const SIGN_OUT_USER_ERROR = 'SIGN_OUT_USER_ERROR';\n\nexport const SET_UP_USER = 'SET_UP_USER'; // used in redux-saga\nexport const SET_UP_USER_SUCCESS = 'SET_UP_USER_SUCCESS';\nexport const SET_UP_USER_ERROR = 'SET_UP_USER_ERROR';\n\nexport const LOAD_OFFICE_USERS = 'LOAD_OFFICE_USER';\nexport const LOAD_OFFICE_USERS_SUCCESS = 'LOAD_OFFICE_USER_SUCCESS';\nexport const LOAD_OFFICE_USERS_ERROR = 'LOAD_OFFICE_USER_ERROR';\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\n","export const firebase = (state) => state.general.firebase; \n","export default class AirOffice { \n    constructor(dict) {\n        const uid = dict.uid || null;\n        if (uid === null) { \n            return null\n        }\n        \n        const name = dict.name || null;\n        const building = dict.building || null;\n        const floor = dict.floor || null;\n        const roomNo = dict.roomNo || null;\n        \n        this.uid = uid;\n        this.name = name;\n        this.building = building;\n        this.floorNo = floor;\n        this.roomNo = roomNo;\n    }\n}\n//  var uid: String?\n//  var name: String?\n//  var building: AirBuilding?\n//  var floor: Int?\n//  var roomNo: Int?","import { takeLatest, call, put, select } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as selectors from './selectors';\nimport AirOffice from \"../models/AirOffice\";\nimport \"firebase/functions\";\nimport \"firebase/auth\";\n\n// Watchers\n\nexport function* userSignInWatchSaga() {\n    yield takeLatest(actionTypes.SIGN_IN_USER, userSignInWorkerSaga);\n}\n\nexport function* userSignOutWatchSaga() {\n    yield takeLatest(actionTypes.SIGN_OUT_USER, userSignOutWorkerSaga);\n  }\n\nexport function* watchSetUpUserSaga() {\n    yield takeLatest(actionTypes.SET_UP_USER, workerSetUpUserSaga);\n}\n\n/* -------------------------------------------------------------------------- */\n\nfunction signInUser(payload, firebase) {\n    const email = payload.email || null;\n    const password = payload.password || null;\n    const rememberMe = payload.rememberMe || false;\n    // firebase.auth.Auth.Persistence.SESSION\n    let persistMode = 'session';\n    if (rememberMe === true) { \n            // firebase.auth.Auth.Persistence.LOCAL\n        persistMode = 'local';\n    }\n\n    firebase.auth.setPersistence(persistMode)\n    .then(function() {\n      return firebase.auth.signInWithEmailAndPassword(email, password);\n    })\n    .catch(function(error) {\n      console.error(error);\n      throw error;\n    });\n  }\n\nfunction* userSignInWorkerSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(signInUser, action.payload, firebase);\n        // Need to properly parse call here\n        console.log(\"SIGN IN CALL SUCCESSFUL\");\n        yield put({ type: actionTypes.SIGN_IN_USER_SUCCESS });\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.SIGN_IN_USER_ERROR, payload: {error: error} });\n    }\n  }\n\n  /* -------------------------------------------------------------------------- */\n\n  function signOutUser(firebase) {\n      return firebase.auth.signOut()\n      .catch(error => {\n          throw error;\n      })\n    }\n\n  function* userSignOutWorkerSaga(action) {\n      try {\n          let firebase = yield select(selectors.firebase);\n          const response = yield call(signOutUser, firebase);\n          // Need to properly parse call here\n          console.log(\"SIGN OUT CALL SUCCESSFUL\");\n          yield put({ type: actionTypes.SIGN_OUT_USER_SUCCESS });\n      } catch (error) {\n          console.error(error);\n          yield put({ type: actionTypes.SIGN_OUT_USER_ERROR, payload: {error: error} });\n      }\n    }\n\n    /* -------------------------------------------------------------------------- */\n\nfunction setUpUser(payload, firebase) {\n    const uid = payload.uid || null;\n    const apiCall = firebase.functions.httpsCallable('getUserInfo')\n    return apiCall({uid: uid})\n    .then( result => {\n        const data = result.data;\n\n        let adminOffices = [];\n        for (let key in data.officeAdmin) { \n            const officeDict = data.officeAdmin[key];\n            const office = new AirOffice(officeDict);\n            if (office) { \n                adminOffices.push(office);\n            }\n        }\n        data.officeAdmin = adminOffices;\n\n        let userOffices = [];\n        for (let key in data.offices) { \n            const officeDict = data.offices[key];\n            const office = new AirOffice(officeDict);\n            if (office) { \n                userOffices.push(office);\n            }\n        }\n        data.offices = userOffices;\n\n        return data;\n    })\n  }\n\nfunction* workerSetUpUserSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(setUpUser, action.payload, firebase);\n        yield put({ type: actionTypes.SET_UP_USER_SUCCESS, payload: {data: response}});\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.SET_UP_USER_ERROR, payload: {error: error} });\n    }\n  }\n","import AirOffice from './AirOffice';\n\nexport default class AirUser { \n    constructor(dict) {\n        const uid = dict.uid || null;\n        if (uid === null) { \n            return null\n        }\n        \n        const firstName = dict.firstName || null;\n        const lastName = dict.lastName || null;\n        const email = dict.email || null;\n        const type = dict.type || null;\n        const offices = dict.offices || null;\n        const adminOffices = dict.officeAdmin || null;\n        this.uid = uid;\n        this.name = firstName+\" \"+lastName;\n        this.email = email;\n        this.type = type;\n\n        var airOffices = [];\n        for(let key in offices) { \n            const office = new AirOffice(offices[key]);\n            if (office) { \n                airOffices.push(office);\n            }\n        }\n        this.offices = airOffices;\n\n        var airAdminOffices = [];\n        for(let key in adminOffices) { \n            const office = new AirOffice(offices[key]);\n            if (office) { \n                airAdminOffices.push(office);\n            }\n        }\n        this.officeAdmins = airAdminOffices;\n    }\n}","import { takeLatest, call, put, select } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as selectors from './selectors';\nimport AirUser from '../models/AirUser';\nrequire(\"firebase/functions\");\n\n// Watchers \n\nexport function* loadOfficeUsersWatchSaga() {\n    yield takeLatest(actionTypes.LOAD_OFFICE_USERS, loadOfficeUsersWorkerSaga);\n}\n\n// Workers \n\nfunction loadOfficeUsers(payload, firebase) { \n    const officeUID = payload.officeUID || null;\n    const apiCall = firebase.functions.httpsCallable('getAllUsersForOffice')\n    console.log(officeUID);\n    console.log('loadOfficeUsers');\n    return apiCall({officeUID: officeUID})\n    .then( result => { \n        console.log(\"loadOfficeUsers success: \"+result);\n        const data = result.data; \n        var userList = [];\n        for (let key in data) {\n            const value = data[key];\n            const user = new AirUser(value) || null;\n            if (user !== null) { \n                userList.push(user);\n            }\n        }\n        return userList;\n    })\n}\n\nfunction* loadOfficeUsersWorkerSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(loadOfficeUsers, action.payload, firebase);\n        console.log(response);\n        yield put({ type: actionTypes.LOAD_OFFICE_USERS_SUCCESS, payload: { userList: response }});\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.LOAD_OFFICE_USERS_ERROR, payload: {error: error} });\n    }\n  }","// import { all } from 'redux-saga/effects';\nimport * as authSagas from './auth';\nimport * as officeAdminSagas from './officeAdmin';\n\n// import watchSetUpFirebaseSaga from './setUpFirebase';\n// import watchSetUpUserSaga from \"./setUpUser\"; \n\nconst sagas: {[index: string]: any} = {\n    ...authSagas, \n    ...officeAdminSagas\n};\n\nexport default function registerWithMiddleware(middleware: { run: Function }) {\n    for (let name in sagas) {\n        middleware.run(sagas[name]);\n    }\n}\n\n// export default function* rootSaga() {\n//     yield all([\n//         watchSetUpUserSaga, \n//         watchSetUpFirebaseSaga\n//     ]);\n//   }","export const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    isLoading: false,\n    error: null,\n    firebase: null,\n    currentPage: null, \n    regularUserPortalMode: 'regular',\n    currentOfficeAdminUID: null\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.SET_UP_FIREBASE:\n            let firebase = action.payload.firebase;\n            return updateObject(state, {firebase: firebase});\n        case actionTypes.SIGN_IN_USER:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.SIGN_IN_USER_SUCCESS:\n             return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SIGN_IN_USER_ERROR:\n             const signInError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: signInError});\n        case actionTypes.SET_UP_USER:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.SET_UP_USER_SUCCESS:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SIGN_OUT_USER:\n            return updateObject(state, {isLoading: true, error: null});\n         case actionTypes.SIGN_OUT_USER_SUCCESS:\n        case actionTypes.SIGN_OUT_USER_ERROR:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SET_UP_USER_ERROR:\n            const userError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: userError});\n        case actionTypes.LOAD_OFFICE_USERS:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.LOAD_OFFICE_USERS_SUCCESS:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.LOAD_OFFICE_USERS_ERROR:\n            const loadError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: loadError});\n        case actionTypes.CHANGE_PAGE:\n            const payload = action.payload || null;\n            return updateObject(state, {...payload})\n        default:\n            return state;\n    }\n    // return state;\n};\n\nexport default reducer;\n","\nexport const userPageOfficeAdmin = \"userPageOfficeAdmin\";\nexport const homePageOfficeAdmin = \"homePageOfficeAdmin\";\n\nexport const homePageRegularUser = \"homePageRegularUser\";","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport * as pageTitles from '../../pages/pageTitles';\n\nconst initialState = {\n    userList: [], \n    isLoadingUserData: false\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.CHANGE_PAGE:\n            const payload = action.payload || null;\n            const pageName = payload.currentpage || null;\n            if (pageName == pageTitles.homePageOfficeAdmin) { \n                return initialState;\n            } else { \n                return state;\n            }\n        case actionTypes.LOAD_OFFICE_USERS:\n            return updateObject(state, {isLoadingUserData: true});\n        case actionTypes.LOAD_OFFICE_USERS_SUCCESS:\n            // properly update state here \n            const userList = action.payload.userList || null;\n            return updateObject(state, {userList: userList, isLoadingUserData: false});\n        case actionTypes.LOAD_OFFICE_USERS_ERROR: \n            return updateObject(state, {isLoadingUserData: false});\n    }\n    return state;\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    user: null,\n    type: null,\n    adminOfficeList: null\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.SIGN_OUT_USER_SUCCESS: \n            return initialState; \n        case actionTypes.SIGN_IN_USER:\n            break;\n        case actionTypes.SET_UP_USER_ERROR:\n            break;\n        case actionTypes.SET_UP_USER_SUCCESS:\n            const data = action.payload.data || null;\n            const type = data.type || null;\n            const adminOfficeList = data.officeAdmin || null;\n            return updateObject(state, {user: data, type: type, adminOfficeList: adminOfficeList});\n        case actionTypes.SET_UP_USER_ERROR:\n            return updateObject(state, {user: null});\n        default:\n            return state;\n    }\n    return state;\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport registerWithMiddleware from '../saga/index.ts';\n\nimport generalReducer from './reducers/general';\nimport officeAdminReducer from './reducers/officeAdmin';\nimport authReducer from './reducers/auth';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst rootReducer = combineReducers({\n    general: generalReducer,\n    auth: authReducer,\n    officeAdmin: officeAdminReducer\n });\n\n//  const persistConfig = {\n//     key: 'root',\n//     storage,\n//   }\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n\n const sagaMiddleware = createSagaMiddleware();\n let middlewares = applyMiddleware(sagaMiddleware);\n\n const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n export const store = createStore(rootReducer, composeEnhancer(middlewares));\n//  export const persistor = persistStore(store);\n\n registerWithMiddleware(sagaMiddleware);","import React from 'react';\nimport { connect } from 'react-redux';\n// import { Menu, Dropdown, Icon } from 'antd';\nimport AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport '../../App.css'\n\nclass LoginNavBar extends React.Component {\n    state = {\n        current: null,\n    }\n\n    handleClick = (e) => {\n        return\n    }\n\n    render() {\n\n        return (\n          <div>\n            <AppBar position=\"static\" style={{ background: 'transparent'}}>\n              <Grid container justify=\"center\" alignItems=\"center\" >\n                  <img className=\"logo-nav-image\" src={require('../../assets/images/nav-logo.png')}></img>\n              </Grid>\n            </AppBar>\n          </div>\n        );\n    }\n}\n\nexport default connect(null, null)(LoginNavBar);\n","import React from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Card, Row, Col, Layout} from 'antd';\nimport SigninLogo from \"../../assets/images/fogg-logged-out-1.png\";\nimport { connect } from 'react-redux';\nimport * as authActionCreators from '../../store/actions/auth';\nimport '../../App.css'\nimport './Login.css'\n\n// To do:\n// handle forgot password\n// handle remember me\n// responsive card size\n\nclass LoginForm extends React.Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const email = values.emailAddress || null;\n        const password = values.password || null;\n        const rememberMe = values.remember || false;\n        this.props.signInUser(email, password, rememberMe);\n      }\n    });\n  }\n\n  render() {\n\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n          <Card className=\"login-card\">\n            <Row>\n              <Col span={12}>\n                <Card\n                  cover={<img alt=\"example\" src={SigninLogo}/>}\n                  bordered={false}\n                >\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card bordered={false}>\n                  <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                      {getFieldDecorator('emailAddress', {\n                        rules: [{ required: true, message: 'Please input your email address!', whitespace: true, pattern: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+.)+([a-zA-Z0-9]{2,4})+$/ }],\n                      })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email Address\" />\n                      )}\n                    </Form.Item>\n                    <Form.Item>\n                      {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!', whitespace: true }],\n                      })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                      )}\n                    </Form.Item>\n                    <Form.Item>\n                      {getFieldDecorator('remember', {\n                        valuePropName: 'checked',\n                        initialValue: true,\n                      })(\n                        <Checkbox className=\"\">Remember me</Checkbox>\n                      )}\n                      <a className=\"login-form-forgot airspaceColor\" href=\"\">Forgot password?</a>\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button airspace-submit-button\">\n                        Log in\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                </Card>\n              </Col>\n            </Row>\n          </Card>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signInUser: (email, password, rememberMe) => dispatch(authActionCreators.signInUserAction(email, password, rememberMe))\n  }\n};\n\nexport default Form.create({ name: 'normal_login' })(connect(null, mapDispatchToProps)(LoginForm));\n","import * as actionTypes from './actionTypes';\n\nexport const setUpUserAction = (uid) => {\n    return {\n        type: actionTypes.SET_UP_USER,\n        payload: {\n            uid: uid\n        }\n    };\n}\n\nexport const signOutUserAction = () => {\n    return {\n        type: actionTypes.SIGN_OUT_USER,\n        payload: {\n        }\n    };\n}\n\nexport const signInUserAction = (email, password, rememberMe) => {\n    return {\n        type: actionTypes.SIGN_IN_USER,\n        payload: {\n            email: email,\n            password: password, \n            rememberMe: rememberMe\n        }\n    };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LoginNavBar from './LoginNavBar';\nimport LoginForm from './LoginForm';\nimport { Row, Col } from 'antd';\nimport './Login.css'\n\n// To-do:\n// make sure successful sign in leaves page\n// show loading indicator\n// show error message\n\nclass Login extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <LoginNavBar/>\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n           <Col>\n              <LoginForm/>\n          </Col>\n        </Row>\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.general.error,\n    isLoading: state.general.isLoading\n  }\n};\n\nexport default connect(mapStateToProps, null)(Login);","import React from 'react';\nimport { Menu, Dropdown, Icon, Row, Col } from 'antd';\nimport { connect } from 'react-redux';\nimport * as authActionCreators from '../../store/actions/auth';\nimport '../../App.css'\n\n\nclass NavBar extends React.Component {\n  state = {\n    current: null,\n  }\n\n  handleSignOut = (e) => {\n    this.props.signOutUser();\n  }\n\n  handleProfileClick = (e) => {\n    switch (e.key) {\n      case 'Edit Profile':\n        console.log(\"Implement Edit Profile\")\n        break;\n      case 'SignOut':\n        console.log(\"Made it here\");\n        break\n    }\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    if (e.key == \"signout\") {\n      this.handleSignOut(e);\n    }\n    if (e.key == \"notifications\") {\n      console.log(\"Implement Notifications\");\n    }\n  }\n\n  render() {\n    const profileMenu = (\n      <Menu onClick={this.handleClick}>\n        <Menu.Item key=\"Edit Profile\">\n          <a>Edit Profile</a>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"signout\">\n          <a>Sign Out</a>\n        </Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Menu\n            onClick={this.handleClick}\n            mode=\"horizontal\"\n            style={{ textAlign: 'right', border: 0 }}\n          >\n            <Menu.Item key=\"notifications\">\n              <Icon type=\"bell\" />\n            </Menu.Item>\n\n            <Menu.Item key=\"profile\">\n              <Dropdown overlay={profileMenu} trigger={['click']}>\n                <a className=\"ant-dropdown-link\" href=\"#\">\n                  <Icon type=\"smile\" />\n                </a>\n              </Dropdown>\n            </Menu.Item>\n          </Menu>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOutUser: () => dispatch(authActionCreators.signOutUserAction())\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(NavBar);\n","import * as pageTitles from './pageTitles';\n\nconst getPagePayload = (pageName, payload) => { \n    switch (pageName) { \n        case pageTitles.homePageOfficeAdmin: \n            const officeUID = payload.officeUID || null;\n            return officeAdminHomePagePayload(officeUID)\n        case pageTitles.userPageOfficeAdmin: \n            return officeAdminUsersPagePayload()\n        case pageTitles.homePageRegularUser: \n            return regularUserHomePagePayload()\n        default: \n            return {}\n    }\n}\nexport default getPagePayload;\n\nconst regularUserHomePagePayload = (officeUID) => { \n    return { \n        currentPage: pageTitles.homePageRegularUser, \n        currentOfficeAdminUID: null, \n        regularUserPortalMode: 'regular'\n    }\n}\n\nconst officeAdminHomePagePayload = (officeUID) => { \n    return { \n        currentPage: pageTitles.homePageOfficeAdmin, \n        currentOfficeAdminUID: officeUID, \n        regularUserPortalMode: 'officeAdmin'\n    }\n}\n\n const officeAdminUsersPagePayload = () => { \n    return { \n        currentPage: pageTitles.userPageOfficeAdmin, \n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu, Icon } from 'antd';\nimport * as pageTitles from '../../pages/pageTitles';\nimport getPagePayload from '../../pages/pageRoutingFunctions';\nimport * as actionCreators from '../../store/actions/general';\nimport '../../App.css';\nimport './sideNavBar.css';\n\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nclass SideNavBar extends React.Component {\n  handleClick = (e) => {\n    var pageTitle = e.key;\n    const pagePayload = getPagePayload(pageTitle);\n    if (pagePayload) { \n      this.props.changePage(pagePayload);\n    }\n  }\n\n  handleOfficeAdminClick = (e) => { \n    var officeUID = e.key;\n    const pagePayload = getPagePayload(pageTitles.homePageOfficeAdmin, {officeUID: officeUID});\n    console.log(pagePayload);\n    if (pagePayload) { \n      this.props.changePage(pagePayload);\n    }\n  }\n\n  render() {\n    const sideBarLogo = (\n      <img style={{ height: 30, width: 200, paddingLeft: 30 }} className=\"logo-nav-image\" src={require('../../assets/images/nav-logo.png')} />\n    );\n    const  switchPortalSubMenu = (\n      <SubMenu key=\"sub1\" title={<span><Icon type=\"up-square\" /><span>Switch Portal</span></span>}>\n        <Menu.Item key={pageTitles.homePageRegularUser}>{<span><Icon type=\"user\" /><span>Regular Portal</span></span>}</Menu.Item>\n        <MenuItemGroup key=\"g1\" title=\"Office Admin Portals\">\n          {this.props.adminOfficeList.map((office) => (\n            <Menu.Item key={office.uid} onClick={this.handleOfficeAdminClick}            >{office.name}</Menu.Item>\n          ))}\n        </MenuItemGroup>\n      </SubMenu>\n    );\n\n    if (this.props.userType == \"regular\") {\n      if (this.props.regularUserPortalMode == \"officeAdmin\") {\n        return (\n          <Menu\n            onClick={this.handleClick}\n            style={{ border: 0 }}\n            defaultSelectedKeys={[this.props.currentPage]}\n            mode=\"inline\"\n            className=\"airspace-side-nav-bar\"\n          >\n          {sideBarLogo}\n            <MenuItemGroup key=\"g2\" title=\"\" className=\"airspace-side-nav-bar-group\">\n              <Menu.Item key=\"home\">{<span><Icon type=\"home\" /><span>Home</span></span>}</Menu.Item>\n              <Menu.Item key={pageTitles.userPageOfficeAdmin} >{<span><Icon type=\"user\" /><span>Users</span></span>}</Menu.Item>\n              <Menu.Item key=\"conferenceRooms\">{<span><Icon type=\"user\" /><span>Conference Rooms</span></span>}</Menu.Item>\n              <Menu.Item key=\"hotDesks\">{<span><Icon type=\"user\" /><span>Hot Desks</span></span>}</Menu.Item>\n              <Menu.Item key=\"serviceRequests\">{<span><Icon type=\"user\" /><span>Service Requests</span></span>}</Menu.Item>\n              <Menu.Item key=\"registeredGuests\">{<span><Icon type=\"user\" /><span>Registered Guests</span></span>}</Menu.Item>\n              {switchPortalSubMenu}\n            </MenuItemGroup>\n\n          </Menu>\n        );\n      } else if (this.props.regularUserPortalMode == \"regular\") {\n        return (\n          <Menu\n            onClick={this.handleClick}\n            style={{ width: 256, height: 100, border: 0 }}\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            mode=\"inline\"\n          >       \n             {sideBarLogo}\n            {switchPortalSubMenu}\n          </Menu>\n        )\n      }\n    } else {\n      // if not a regular user\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    userType: state.auth.type,\n    adminOfficeList: state.auth.adminOfficeList,\n    regularUserPortalMode: state.general.regularUserPortalMode, \n    currentPage: state.general.currentPage\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: (payload) => dispatch(actionCreators.changePage(payload))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);\n","import * as actionTypes from './actionTypes';\n\nexport const setUpFirebaseInstanceAction = (firebaseInstance) => { \n    return {\n        type: actionTypes.SET_UP_FIREBASE, \n        payload: { \n            firebase: firebaseInstance\n        }\n    };\n}\n\nexport const changePage = (payload) => { \n    return {\n        type: actionTypes.CHANGE_PAGE, \n        payload: { ...payload }\n    };\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Tag, Icon} from 'antd';\n// import Highlighter from 'react-highlight-words';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\n\nimport * as actionCreator from '../../store/actions/officeAdmin';\n// import { stat } from 'fs';\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: (a, b) => {\n    const aName = a.name; \n    const bName = b.name;\n    if (aName < bName) { \n      return -1;\n    } else if (aName > bName) { \n      return 1;\n    } else { \n      return 0\n    }\n  },\n  sortDirections: ['descend', 'ascend'],\n}, \n{\n  title: 'Email',\n  dataIndex: 'email'\n},\n{\n  title: 'Offices',\n  dataIndex: 'offices',\n  render: (offices => (\n        <span>\n          {offices.map(office => <Tag color=\"blue\" key={office.uid}>{office.name}</Tag>)}\n        </span>\n      ))\n},\n{\n  title: 'Office Admin For',  \n  dataIndex: 'officeAdmins',\n  render: (offices => (\n    <span>\n      {offices.map(office => <Tag color=\"blue\" key={office.uid}>{office.name}</Tag>)}\n    </span>\n  )),\n  filterMultiple: true,\n  onFilter: (value, record) => record.type.indexOf(value) === 0\n},  \n{\n  title: '',\n  key: 'more',\n  render: () => (\n    <IconButton>\n      <MoreIcon/>\n    </IconButton>\n  ),\n}];\n\nclass UsersTable extends React.Component {\n  state = {\n    searchText: '',\n  };\n\n   componentDidMount() { \n    this.props.loadUserList(this.props.currentOfficeUID);\n   }\n\n  render() {\n    return (\n      // customize empty state locale={{ emptyText: 'No Users'}}\n      <Table rowKey={record => record.uid.toString()} columns={columns} dataSource={this.props.userList} pagination={false} loading={this.props.isLoadingUserData}/>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.officeAdmin.userList, \n    currentOfficeUID: state.general.currentOfficeAdminUID, \n    isLoadingUserData: state.officeAdmin.isLoadingUserData\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadUserList: (officeUID) => dispatch(actionCreator.loadOfficeUsers(officeUID))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersTable);\n","import * as actionTypes from './actionTypes';\n\nexport const loadOfficeUsers = (officeUID) => { \n    return {\n        type: actionTypes.LOAD_OFFICE_USERS, \n        payload: { \n            officeUID: officeUID\n        }\n    };\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'antd';\nimport UsersTable from './usersTable';\nimport '../../App.css';\n// import UsersSideBar from './usersSideBar';\n\nclass UsersPage extends React.Component {\n    render() {\n        return (\n            <Row>\n                <Col className=\"wide-table\" span={24}>\n                    <div>\n                        <h1>Users</h1>\n                        <Button className=\"right-button\" type=\"primary\" >Add User</Button>\n                    </div>\n                    <UsersTable />  \n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default connect(null, null)(UsersPage);\n\n","import app from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/functions';\n// const app = require(\"firebase\");\n// require(\"firebase/functions\");\n\nconst prodConfig = {\n    apiKey: \"AIzaSyBPUBLiY-FCuqpJLVibdr-RoiUt4wzbaLE\",\n    authDomain: \"airspace-management-app.firebaseapp.com\",\n    databaseURL: \"https://airspace-management-app.firebaseio.com\",\n    projectId: \"airspace-management-app\",\n    storageBucket: \"airspace-management-app.appspot.com\",\n    messagingSenderId: \"927508779333\"\n  };\n  \n// User this when I want to set up a dev version\n//   const devConfig = {\n//     apiKey: process.env.REACT_APP_DEV_API_KEY,\n//     authDomain: process.env.REACT_APP_DEV_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DEV_DATABASE_URL,\n//     projectId: process.env.REACT_APP_DEV_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_DEV_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_DEV_MESSAGING_SENDER_ID,\n//   };\n//  process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\nvar config = prodConfig;\n\nclass Firebase {\n\n  constructor() {\n\n    if (!app.apps.length) {\n      app.initializeApp(config);\n    } \n    this.auth = app.auth();\n    this.functions = app.functions();     \n  }\n}\n\nexport default Firebase;","// import { FirebaseContext, withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\n// export {FirebaseContext, withFirebase };","import React, { Component } from 'react';\n// import { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Login from './components/Login/Login';\nimport NavBar from './components/NavBar/navbar';\nimport SideNavbar from './components/SideNavBar/sidenavbar';\nimport UsersPage from './components/UsersPage/usersPage';\nimport Firebase from './components/Firebase';\n\nimport * as generalActionCreators from './store/actions/general';\nimport * as authActionCreators from './store/actions/auth';\nimport {Row, Col, Icon} from 'antd';\nimport * as pageTitles from './pages/pageTitles';\n\nclass App extends Component {\n\n  componentWillMount() {\n    if (this.props.firebase === null) {\n      this.firebase = new Firebase()\n      this.props.setUpFirebase(this.firebase);\n    }\n  }\n\n  componentDidMount() {\n    const firebase = this.firebase || null;\n    if (firebase) {\n      const weakProps = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(function(user) {\n        if (user) {\n          console.log('auth listener found user');\n          weakProps.setUpUser(user.uid);\n        } else {\n          console.log('auth listener did NOT find user');\n          weakProps.setUpUser(null);\n        }\n      });\n    } else {\n      console.log(\"firebase NOT set up in App.js render()\");\n      // this.props.setUpFirebase();\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  renderPageContent(pageName) {\n\n    switch (pageName) { \n      case pageTitles.homePageRegularUser: \n        return null\n      case pageTitles.userPageOfficeAdmin: \n        return (\n          <UsersPage />\n        );\n      default: \n          // return 404 page? \n          return null\n    }\n  }\n\n  render() {\n\n    // need to set state for employee or admin mode? which office?\n    // - need to setuser type ? figure out back end?\n    // need to set state for logged in in redux\n\n    if (this.props.user) { // logged in\n      return (\n        <div>\n          <Row>\n            <Col span={4}>\n              <SideNavbar />\n            </Col>\n            <Col span={20}>\n              <NavBar/>\n              {this.renderPageContent(this.props.currentPage)}\n            </Col>\n          </Row>\n        </div>\n      );\n    } else { // logged out\n\n      // Need to also remove ability to route to any other pages !!!\n      return (\n        <Login />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    isLoading: state.general.isLoading,\n    error: state.general.error,\n    firebase: state.general.firebase,\n    currentPage: state.general.currentPage\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUpFirebase: (firebaseInstance) => dispatch(generalActionCreators.setUpFirebaseInstanceAction(firebaseInstance)),\n    setUpUser: (uid) => dispatch(authActionCreators.setUpUserAction(uid))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as storeFile from './store/store';\nimport App from './App'; \nimport { BrowserRouter }from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst finalApp = ( \n    <BrowserRouter>\n            <Provider store={storeFile.store}> \n                {/* <PersistGate loading={null} persistor={storeFile.persistor}> */}\n                    <App />\n                {/* </PersistGate> */}\n            </Provider>\n    </BrowserRouter>\n);\nReactDOM.render(finalApp, document.getElementById('root'));\n\n\n"],"sourceRoot":""}