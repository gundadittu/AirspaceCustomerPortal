{"version":3,"sources":["assets/images/nav-logo.png","assets/images/fogg-logged-out-1.png","store/actions/actionTypes.js","saga/selectors.js","models/AirOffice.js","saga/auth.js","models/AirUser.js","saga/officeAdmin.js","saga/index.ts","store/utility.js","store/reducers/general.js","pages/pageTitles.js","store/reducers/officeAdmin.js","store/reducers/auth.js","store/store.js","components/Login/LoginNavBar.js","components/Login/LoginForm.js","store/actions/auth.js","components/Login/Login.js","components/NavBar/navbar.js","pages/pageRoutingFunctions.js","components/SideNavBar/sidenavbar.js","store/actions/general.js","components/UsersPage/usersTable.js","store/actions/officeAdmin.js","components/UsersPage/usersPage.js","components/Firebase/firebase.js","components/Firebase/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","SIGN_IN_USER","SIGN_IN_USER_SUCCESS","SIGN_IN_USER_ERROR","SIGN_OUT_USER","SIGN_OUT_USER_SUCCESS","SIGN_OUT_USER_ERROR","SET_UP_USER","SET_UP_USER_SUCCESS","SET_UP_USER_ERROR","LOAD_OFFICE_USERS","LOAD_OFFICE_USERS_SUCCESS","LOAD_OFFICE_USERS_ERROR","firebase","state","general","AirOffice","dict","Object","classCallCheck","this","uid","name","building","floor","roomNo","floorNo","userSignInWatchSaga","userSignOutWatchSaga","watchSetUpUserSaga","userSignInWorkerSaga","userSignOutWorkerSaga","workerSetUpUserSaga","regenerator_default","a","wrap","_context","prev","next","takeLatest","actionTypes","stop","_marked","_context2","_marked2","_context3","_marked3","signInUser","payload","email","password","auth","signInWithEmailAndPassword","catch","error","action","_context4","select","selectors","sent","call","console","log","put","type","t0","_marked4","signOutUser","signOut","_context5","_marked5","setUpUser","functions","httpsCallable","apiCall","then","result","data","adminOffices","key","officeAdmin","officeDict","office","push","userOffices","offices","response","_context6","_marked6","require","AirUser","firstName","lastName","airOffices","airAdminOffices","officeAdmins","loadOfficeUsersWatchSaga","loadOfficeUsersWorkerSaga","officeAdmin_marked","loadOfficeUsers","officeUID","userList","value","user","officeAdmin_marked2","sagas","objectSpread","authSagas","officeAdminSagas","updateObject","oldObject","updatedValues","initialState","isLoading","currentPage","regularUserPortalMode","currentOfficeAdminUID","reducer","arguments","length","undefined","signInError","userError","loadError","homePageOfficeAdmin","isLoadingUserData","currentpage","pageTitles","adminOfficeList","rootReducer","combineReducers","generalReducer","authReducer","officeAdminReducer","persistConfig","storage","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistor","persistStore","middleware","run","registerWithMiddleware","LoginNavBar","current","handleClick","e","react_default","createElement","AppBar_default","position","style","background","Grid_default","container","justify","alignItems","className","src","React","Component","connect","LoginForm","handleSubmit","preventDefault","_this","props","form","validateFields","err","values","emailAddress","getFieldDecorator","card","row","col","span","cover","alt","SigninLogo","bordered","es_form","onSubmit","Item","rules","required","message","whitespace","pattern","input","prefix","icon","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","Form","create","dispatch","authActionCreators","Login","Login_LoginNavBar","align","Login_LoginForm","NavBar","handleSignOut","handleProfileClick","profileMenu","menu","onClick","Divider","mode","textAlign","border","dropdown","overlay","trigger","getPagePayload","pageName","officeAdminHomePagePayload","officeAdminUsersPagePayload","regularUserHomePagePayload","SubMenu","Menu","MenuItemGroup","ItemGroup","SideNavBar","pageTitle","pagePayload","changePage","handleOfficeAdminClick","_this2","sideBarLogo","height","width","paddingLeft","switchPortalSubMenu","title","map","userType","defaultSelectedKeys","defaultOpenKeys","actionCreators","columns","dataIndex","sorter","b","aName","bName","sortDirections","render","tag","filterMultiple","onFilter","record","indexOf","IconButton_default","MoreHoriz_default","UsersTable","searchText","loadUserList","currentOfficeUID","table","rowKey","toString","dataSource","pagination","loading","actionCreator","UsersPage","usersTable","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","app","apps","initializeApp","App","setUpFirebase","weakProps","listener","onAuthStateChanged","usersPage","sidenavbar","navbar","renderPageContent","components_Login_Login","firebaseInstance","generalActionCreators","finalApp","BrowserRouter","es","storeFile","integration_react","src_App_0","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3f39cf84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nav-logo.95664742.png\";","module.exports = __webpack_public_path__ + \"static/media/fogg-logged-out-1.81182dc8.png\";","export const SET_UP_FIREBASE = \"SET_UP_FIREBASE\";\n\nexport const SIGN_IN_USER = 'SIGN_IN_USER'; // used in redux-saga\nexport const SIGN_IN_USER_SUCCESS = 'SIGN_IN_USER_SUCCESS';\nexport const SIGN_IN_USER_ERROR = 'SIGN_IN_USER_ERROR';\n\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER'; // used in redux-saga\nexport const SIGN_OUT_USER_SUCCESS = 'SIGN_OUT_USER_SUCCESS';\nexport const SIGN_OUT_USER_ERROR = 'SIGN_OUT_USER_ERROR';\n\nexport const SET_UP_USER = 'SET_UP_USER'; // used in redux-saga\nexport const SET_UP_USER_SUCCESS = 'SET_UP_USER_SUCCESS';\nexport const SET_UP_USER_ERROR = 'SET_UP_USER_ERROR';\n\nexport const LOAD_OFFICE_USERS = 'LOAD_OFFICE_USER';\nexport const LOAD_OFFICE_USERS_SUCCESS = 'LOAD_OFFICE_USER_SUCCESS';\nexport const LOAD_OFFICE_USERS_ERROR = 'LOAD_OFFICE_USER_ERROR';\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\n","export const firebase = (state) => state.general.firebase; \n","export default class AirOffice { \n    constructor(dict) {\n        const uid = dict.uid || null;\n        if (uid === null) { \n            return null\n        }\n        \n        const name = dict.name || null;\n        const building = dict.building || null;\n        const floor = dict.floor || null;\n        const roomNo = dict.roomNo || null;\n        \n        this.uid = uid;\n        this.name = name;\n        this.building = building;\n        this.floorNo = floor;\n        this.roomNo = roomNo;\n    }\n}\n//  var uid: String?\n//  var name: String?\n//  var building: AirBuilding?\n//  var floor: Int?\n//  var roomNo: Int?","import { takeLatest, call, put, select } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as selectors from './selectors';\nimport AirOffice from \"../models/AirOffice\";\nrequire(\"firebase/functions\");\n\n// Watchers\n\nexport function* userSignInWatchSaga() {\n    yield takeLatest(actionTypes.SIGN_IN_USER, userSignInWorkerSaga);\n}\n\nexport function* userSignOutWatchSaga() {\n    yield takeLatest(actionTypes.SIGN_OUT_USER, userSignOutWorkerSaga);\n  }\n\nexport function* watchSetUpUserSaga() {\n    yield takeLatest(actionTypes.SET_UP_USER, workerSetUpUserSaga);\n}\n\n/* -------------------------------------------------------------------------- */\n\nfunction signInUser(payload, firebase) {\n    const email = payload.email || null;\n    const password = payload.password || null;\n\n    return firebase.auth.signInWithEmailAndPassword(email, password)\n    .catch(error => {\n        throw error;\n    })\n  }\n\nfunction* userSignInWorkerSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(signInUser, action.payload, firebase);\n        // Need to properly parse call here\n        console.log(\"SIGN IN CALL SUCCESSFUL\");\n        yield put({ type: actionTypes.SIGN_IN_USER_SUCCESS });\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.SIGN_IN_USER_ERROR, payload: {error: error} });\n    }\n  }\n\n  /* -------------------------------------------------------------------------- */\n\n  function signOutUser(firebase) {\n      return firebase.auth.signOut()\n      .catch(error => {\n          throw error;\n      })\n    }\n\n  function* userSignOutWorkerSaga(action) {\n      try {\n          let firebase = yield select(selectors.firebase);\n          const response = yield call(signOutUser, firebase);\n          // Need to properly parse call here\n          console.log(\"SIGN OUT CALL SUCCESSFUL\");\n          yield put({ type: actionTypes.SIGN_OUT_USER_SUCCESS });\n      } catch (error) {\n          console.error(error);\n          yield put({ type: actionTypes.SIGN_OUT_USER_ERROR, payload: {error: error} });\n      }\n    }\n\n    /* -------------------------------------------------------------------------- */\n\nfunction setUpUser(payload, firebase) {\n    const uid = payload.uid || null;\n    const apiCall = firebase.functions.httpsCallable('getUserInfo')\n    return apiCall({uid: uid})\n    .then( result => {\n        const data = result.data;\n\n        let adminOffices = [];\n        for (let key in data.officeAdmin) { \n            const officeDict = data.officeAdmin[key];\n            const office = new AirOffice(officeDict);\n            if (office) { \n                adminOffices.push(office);\n            }\n        }\n        data.officeAdmin = adminOffices;\n\n        let userOffices = [];\n        for (let key in data.offices) { \n            const officeDict = data.offices[key];\n            const office = new AirOffice(officeDict);\n            if (office) { \n                userOffices.push(office);\n            }\n        }\n        data.offices = userOffices;\n\n        return data;\n    })\n  }\n\nfunction* workerSetUpUserSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(setUpUser, action.payload, firebase);\n        yield put({ type: actionTypes.SET_UP_USER_SUCCESS, payload: {data: response}});\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.SET_UP_USER_ERROR, payload: {error: error} });\n    }\n  }\n","import AirOffice from './AirOffice';\n\nexport default class AirUser { \n    constructor(dict) {\n        const uid = dict.uid || null;\n        if (uid === null) { \n            return null\n        }\n        \n        const firstName = dict.firstName || null;\n        const lastName = dict.lastName || null;\n        const email = dict.email || null;\n        const type = dict.type || null;\n        const offices = dict.offices || null;\n        const adminOffices = dict.officeAdmin || null;\n        this.uid = uid;\n        this.name = firstName+\" \"+lastName;\n        this.email = email;\n        this.type = type;\n\n        var airOffices = [];\n        for(let key in offices) { \n            const office = new AirOffice(offices[key]);\n            if (office) { \n                airOffices.push(office);\n            }\n        }\n        this.offices = airOffices;\n\n        var airAdminOffices = [];\n        for(let key in adminOffices) { \n            const office = new AirOffice(offices[key]);\n            if (office) { \n                airAdminOffices.push(office);\n            }\n        }\n        this.officeAdmins = airAdminOffices;\n    }\n}","import { takeLatest, call, put, select } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as selectors from './selectors';\nimport AirUser from '../models/AirUser';\nrequire(\"firebase/functions\");\n\n// Watchers \n\nexport function* loadOfficeUsersWatchSaga() {\n    yield takeLatest(actionTypes.LOAD_OFFICE_USERS, loadOfficeUsersWorkerSaga);\n}\n\n// Workers \n\nfunction loadOfficeUsers(payload, firebase) { \n    const officeUID = payload.officeUID || null;\n    const apiCall = firebase.functions.httpsCallable('getAllUsersForOffice')\n    console.log(officeUID);\n    console.log('loadOfficeUsers');\n    return apiCall({officeUID: officeUID})\n    .then( result => { \n        console.log(\"loadOfficeUsers success: \"+result);\n        const data = result.data; \n        var userList = [];\n        for (let key in data) {\n            const value = data[key];\n            const user = new AirUser(value) || null;\n            if (user !== null) { \n                userList.push(user);\n            }\n        }\n        return userList;\n    })\n}\n\nfunction* loadOfficeUsersWorkerSaga(action) {\n    try {\n        let firebase = yield select(selectors.firebase);\n        const response = yield call(loadOfficeUsers, action.payload, firebase);\n        console.log(response);\n        yield put({ type: actionTypes.LOAD_OFFICE_USERS_SUCCESS, payload: { userList: response }});\n    } catch (error) {\n        console.error(error);\n        yield put({ type: actionTypes.LOAD_OFFICE_USERS_ERROR, payload: {error: error} });\n    }\n  }","// import { all } from 'redux-saga/effects';\nimport * as authSagas from './auth';\nimport * as officeAdminSagas from './officeAdmin';\n\n// import watchSetUpFirebaseSaga from './setUpFirebase';\n// import watchSetUpUserSaga from \"./setUpUser\"; \n\nconst sagas: {[index: string]: any} = {\n    ...authSagas, \n    ...officeAdminSagas\n};\n\nexport default function registerWithMiddleware(middleware: { run: Function }) {\n    for (let name in sagas) {\n        middleware.run(sagas[name]);\n    }\n}\n\n// export default function* rootSaga() {\n//     yield all([\n//         watchSetUpUserSaga, \n//         watchSetUpFirebaseSaga\n//     ]);\n//   }","export const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    isLoading: false,\n    error: null,\n    firebase: null,\n    currentPage: null, \n    regularUserPortalMode: 'regular',\n    currentOfficeAdminUID: null\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.SET_UP_FIREBASE:\n            let firebase = action.payload.firebase;\n            return updateObject(state, {firebase: firebase});\n        case actionTypes.SIGN_IN_USER:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.SIGN_IN_USER_SUCCESS:\n             return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SIGN_IN_USER_ERROR:\n             const signInError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: signInError});\n        case actionTypes.SET_UP_USER:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.SET_UP_USER_SUCCESS:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SIGN_OUT_USER:\n            return updateObject(state, {isLoading: true, error: null});\n         case actionTypes.SIGN_OUT_USER_SUCCESS:\n        case actionTypes.SIGN_OUT_USER_ERROR:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.SET_UP_USER_ERROR:\n            const userError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: userError});\n        case actionTypes.LOAD_OFFICE_USERS:\n            return updateObject(state, {isLoading: true});\n        case actionTypes.LOAD_OFFICE_USERS_SUCCESS:\n            return updateObject(state, {isLoading: false, error: null});\n        case actionTypes.LOAD_OFFICE_USERS_ERROR:\n            const loadError = action.payload.error || null;\n            return updateObject(state, {isLoading: false, error: loadError});\n        case actionTypes.CHANGE_PAGE:\n            const payload = action.payload || null;\n            return updateObject(state, {...payload})\n        default:\n            return state;\n    }\n    // return state;\n};\n\nexport default reducer;\n","\nexport const userPageOfficeAdmin = \"userPageOfficeAdmin\";\nexport const homePageOfficeAdmin = \"homePageOfficeAdmin\";\n\nexport const homePageRegularUser = \"homePageRegularUser\";","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nimport * as pageTitles from '../../pages/pageTitles';\n\nconst initialState = {\n    userList: [], \n    isLoadingUserData: false\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.CHANGE_PAGE:\n            const payload = action.payload || null;\n            const pageName = payload.currentpage || null;\n            if (pageName == pageTitles.homePageOfficeAdmin) { \n                return initialState;\n            } else { \n                return state;\n            }\n        case actionTypes.LOAD_OFFICE_USERS:\n            return updateObject(state, {isLoadingUserData: true});\n        case actionTypes.LOAD_OFFICE_USERS_SUCCESS:\n            // properly update state here \n            const userList = action.payload.userList || null;\n            return updateObject(state, {userList: userList, isLoadingUserData: false});\n        case actionTypes.LOAD_OFFICE_USERS_ERROR: \n            return updateObject(state, {isLoadingUserData: false});\n    }\n    return state;\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    user: null,\n    type: null,\n    adminOfficeList: null\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.SIGN_OUT_USER_SUCCESS: \n            return initialState; \n        case actionTypes.SIGN_IN_USER:\n            break;\n        case actionTypes.SET_UP_USER_ERROR:\n            break;\n        case actionTypes.SET_UP_USER_SUCCESS:\n            const data = action.payload.data || null;\n            const type = data.type || null;\n            const adminOfficeList = data.officeAdmin || null;\n            return updateObject(state, {user: data, type: type, adminOfficeList: adminOfficeList});\n        case actionTypes.SET_UP_USER_ERROR:\n            return updateObject(state, {user: null});\n        default:\n            return state;\n    }\n    return state;\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport registerWithMiddleware from '../saga/index.ts';\n\nimport generalReducer from './reducers/general';\nimport officeAdminReducer from './reducers/officeAdmin';\nimport authReducer from './reducers/auth';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst rootReducer = combineReducers({\n    general: generalReducer,\n    auth: authReducer,\n    officeAdmin: officeAdminReducer\n });\n\n const persistConfig = {\n    key: 'root',\n    storage,\n  }\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n const sagaMiddleware = createSagaMiddleware();\n let middlewares = applyMiddleware(sagaMiddleware);\n\n const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n export const store = createStore(persistedReducer, composeEnhancer(middlewares));\n export const persistor = persistStore(store);\n\n registerWithMiddleware(sagaMiddleware);","import React from 'react';\nimport { connect } from 'react-redux';\n// import { Menu, Dropdown, Icon } from 'antd';\nimport AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport '../../App.css'\n\nclass LoginNavBar extends React.Component {\n    state = {\n        current: null,\n    }\n\n    handleClick = (e) => {\n        return\n    }\n\n    render() {\n\n        return (\n          <div>\n            <AppBar position=\"static\" style={{ background: 'transparent'}}>\n              <Grid container justify=\"center\" alignItems=\"center\" >\n                  <img className=\"logo-nav-image\" src={require('../../assets/images/nav-logo.png')}></img>\n              </Grid>\n            </AppBar>\n          </div>\n        );\n    }\n}\n\nexport default connect(null, null)(LoginNavBar);\n","import React from 'react';\nimport { Form, Icon, Input, Button, Checkbox, Card, Row, Col, Layout} from 'antd';\nimport SigninLogo from \"../../assets/images/fogg-logged-out-1.png\";\nimport { connect } from 'react-redux';\nimport * as authActionCreators from '../../store/actions/auth';\nimport '../../App.css'\nimport './Login.css'\n\n// To do:\n// handle forgot password\n// handle remember me\n// responsive card size\n\nclass LoginForm extends React.Component {\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const email = values.emailAddress || null;\n        const password = values.password || null;\n        this.props.signInUser(email, password);\n      }\n    });\n  }\n\n  render() {\n\n    const { getFieldDecorator } = this.props.form;\n\n    // const {\n    //   Header, Footer, Sider, Content,\n    // } = Layout;\n\n    return (\n          <Card className=\"login-card\">\n            <Row>\n              <Col span={12}>\n                <Card\n                  cover={<img alt=\"example\" src={SigninLogo}/>}\n                  bordered={false}\n                >\n                </Card>\n              </Col>\n              <Col span={12}>\n                <Card bordered={false}>\n                  <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                      {getFieldDecorator('emailAddress', {\n                        rules: [{ required: true, message: 'Please input your email address!', whitespace: true, pattern: /^([a-zA-Z0-9_.-])+@(([a-zA-Z0-9-])+.)+([a-zA-Z0-9]{2,4})+$/ }],\n                      })(\n                        <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Email Address\" />\n                      )}\n                    </Form.Item>\n                    <Form.Item>\n                      {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Please input your Password!', whitespace: true }],\n                      })(\n                        <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\n                      )}\n                    </Form.Item>\n                    <Form.Item>\n                      {getFieldDecorator('remember', {\n                        valuePropName: 'checked',\n                        initialValue: true,\n                      })(\n                        <Checkbox className=\"\">Remember me</Checkbox>\n                      )}\n                      <a className=\"login-form-forgot airspaceColor\" href=\"\">Forgot password?</a>\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button airspace-submit-button\">\n                        Log in\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                </Card>\n              </Col>\n            </Row>\n          </Card>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signInUser: (email, password) => dispatch(authActionCreators.signInUserAction(email, password))\n  }\n};\n\nexport default Form.create({ name: 'normal_login' })(connect(null, mapDispatchToProps)(LoginForm));\n","import * as actionTypes from './actionTypes';\n\nexport const setUpUserAction = (uid) => {\n    return {\n        type: actionTypes.SET_UP_USER,\n        payload: {\n            uid: uid\n        }\n    };\n}\n\nexport const signOutUserAction = () => {\n    return {\n        type: actionTypes.SIGN_OUT_USER,\n        payload: {\n        }\n    };\n}\n\nexport const signInUserAction = (email, password) => {\n    return {\n        type: actionTypes.SIGN_IN_USER,\n        payload: {\n            email: email,\n            password: password\n        }\n    };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LoginNavBar from './LoginNavBar';\nimport LoginForm from './LoginForm';\nimport { Row, Col } from 'antd';\nimport './Login.css'\n\n// To-do:\n// make sure successful sign in leaves page\n// show loading indicator\n// show error message\n\nclass Login extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <LoginNavBar/>\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n           <Col>\n              <LoginForm/>\n          </Col>\n        </Row>\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    error: state.general.error,\n    isLoading: state.general.isLoading\n  }\n};\n\nexport default connect(mapStateToProps, null)(Login);","import React from 'react';\nimport { Menu, Dropdown, Icon, Row, Col } from 'antd';\nimport { connect } from 'react-redux';\nimport * as authActionCreators from '../../store/actions/auth';\nimport '../../App.css'\n\n\nclass NavBar extends React.Component {\n  state = {\n    current: null,\n  }\n\n  handleSignOut = (e) => {\n    this.props.signOutUser();\n  }\n\n  handleProfileClick = (e) => {\n    switch (e.key) {\n      case 'Edit Profile':\n        console.log(\"Implement Edit Profile\")\n        break;\n      case 'SignOut':\n        console.log(\"Made it here\");\n        break\n    }\n  }\n\n  handleClick = (e) => {\n    console.log('click ', e);\n    if (e.key == \"signout\") {\n      this.handleSignOut(e);\n    }\n    if (e.key == \"notifications\") {\n      console.log(\"Implement Notifications\");\n    }\n  }\n\n  render() {\n    const profileMenu = (\n      <Menu onClick={this.handleClick}>\n        <Menu.Item key=\"Edit Profile\">\n          <a>Edit Profile</a>\n        </Menu.Item>\n        <Menu.Divider />\n        <Menu.Item key=\"signout\">\n          <a>Sign Out</a>\n        </Menu.Item>\n      </Menu>\n    );\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Menu\n            onClick={this.handleClick}\n            mode=\"horizontal\"\n            style={{ textAlign: 'right', border: 0 }}\n          >\n            <Menu.Item key=\"notifications\">\n              <Icon type=\"bell\" />\n            </Menu.Item>\n\n            <Menu.Item key=\"profile\">\n              <Dropdown overlay={profileMenu} trigger={['click']}>\n                <a className=\"ant-dropdown-link\" href=\"#\">\n                  <Icon type=\"smile\" />\n                </a>\n              </Dropdown>\n            </Menu.Item>\n          </Menu>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOutUser: () => dispatch(authActionCreators.signOutUserAction())\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(NavBar);\n","import * as pageTitles from './pageTitles';\n\nconst getPagePayload = (pageName, payload) => { \n    switch (pageName) { \n        case pageTitles.homePageOfficeAdmin: \n            const officeUID = payload.officeUID || null;\n            return officeAdminHomePagePayload(officeUID)\n        case pageTitles.userPageOfficeAdmin: \n            return officeAdminUsersPagePayload()\n        case pageTitles.homePageRegularUser: \n            return regularUserHomePagePayload()\n        default: \n            return {}\n    }\n}\nexport default getPagePayload;\n\nconst regularUserHomePagePayload = (officeUID) => { \n    return { \n        currentPage: pageTitles.homePageRegularUser, \n        currentOfficeAdminUID: null, \n        regularUserPortalMode: 'regular'\n    }\n}\n\nconst officeAdminHomePagePayload = (officeUID) => { \n    return { \n        currentPage: pageTitles.homePageOfficeAdmin, \n        currentOfficeAdminUID: officeUID, \n        regularUserPortalMode: 'officeAdmin'\n    }\n}\n\n const officeAdminUsersPagePayload = () => { \n    return { \n        currentPage: pageTitles.userPageOfficeAdmin, \n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Menu, Icon } from 'antd';\nimport * as pageTitles from '../../pages/pageTitles';\nimport getPagePayload from '../../pages/pageRoutingFunctions';\nimport * as actionCreators from '../../store/actions/general';\nimport '../../App.css';\nimport './sideNavBar.css';\n\n\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nclass SideNavBar extends React.Component {\n  handleClick = (e) => {\n    var pageTitle = e.key;\n    const pagePayload = getPagePayload(pageTitle);\n    if (pagePayload) { \n      this.props.changePage(pagePayload);\n    }\n  }\n\n  handleOfficeAdminClick = (e) => { \n    var officeUID = e.key;\n    const pagePayload = getPagePayload(pageTitles.homePageOfficeAdmin, {officeUID: officeUID});\n    console.log(pagePayload);\n    if (pagePayload) { \n      this.props.changePage(pagePayload);\n    }\n  }\n\n  render() {\n    const sideBarLogo = (\n      <img style={{ height: 30, width: 200, paddingLeft: 30 }} className=\"logo-nav-image\" src={require('../../assets/images/nav-logo.png')} />\n    );\n    const  switchPortalSubMenu = (\n      <SubMenu key=\"sub1\" title={<span><Icon type=\"up-square\" /><span>Switch Portal</span></span>}>\n        <Menu.Item key={pageTitles.homePageRegularUser}>{<span><Icon type=\"user\" /><span>Regular Portal</span></span>}</Menu.Item>\n        <MenuItemGroup key=\"g1\" title=\"Office Admin Portals\">\n          {this.props.adminOfficeList.map((office) => (\n            <Menu.Item key={office.uid} onClick={this.handleOfficeAdminClick}            >{office.name}</Menu.Item>\n          ))}\n        </MenuItemGroup>\n      </SubMenu>\n    );\n\n    if (this.props.userType == \"regular\") {\n      if (this.props.regularUserPortalMode == \"officeAdmin\") {\n        return (\n          <Menu\n            onClick={this.handleClick}\n            style={{ border: 0 }}\n            defaultSelectedKeys={[this.props.currentPage]}\n            mode=\"inline\"\n            className=\"airspace-side-nav-bar\"\n          >\n          {sideBarLogo}\n            <MenuItemGroup key=\"g2\" title=\"\" className=\"airspace-side-nav-bar-group\">\n              <Menu.Item key=\"home\">{<span><Icon type=\"home\" /><span>Home</span></span>}</Menu.Item>\n              <Menu.Item key={pageTitles.userPageOfficeAdmin} >{<span><Icon type=\"user\" /><span>Users</span></span>}</Menu.Item>\n              <Menu.Item key=\"conferenceRooms\">{<span><Icon type=\"user\" /><span>Conference Rooms</span></span>}</Menu.Item>\n              <Menu.Item key=\"hotDesks\">{<span><Icon type=\"user\" /><span>Hot Desks</span></span>}</Menu.Item>\n              <Menu.Item key=\"serviceRequests\">{<span><Icon type=\"user\" /><span>Service Requests</span></span>}</Menu.Item>\n              <Menu.Item key=\"registeredGuests\">{<span><Icon type=\"user\" /><span>Registered Guests</span></span>}</Menu.Item>\n              {switchPortalSubMenu}\n            </MenuItemGroup>\n\n          </Menu>\n        );\n      } else if (this.props.regularUserPortalMode == \"regular\") {\n        return (\n          <Menu\n            onClick={this.handleClick}\n            style={{ width: 256, height: 100, border: 0 }}\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            mode=\"inline\"\n          >       \n             {sideBarLogo}\n            {switchPortalSubMenu}\n          </Menu>\n        )\n      }\n    } else {\n      // if not a regular user\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    userType: state.auth.type,\n    adminOfficeList: state.auth.adminOfficeList,\n    regularUserPortalMode: state.general.regularUserPortalMode, \n    currentPage: state.general.currentPage\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changePage: (payload) => dispatch(actionCreators.changePage(payload))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavBar);\n","import * as actionTypes from './actionTypes';\n\nexport const setUpFirebaseInstanceAction = (firebaseInstance) => { \n    return {\n        type: actionTypes.SET_UP_FIREBASE, \n        payload: { \n            firebase: firebaseInstance\n        }\n    };\n}\n\nexport const changePage = (payload) => { \n    return {\n        type: actionTypes.CHANGE_PAGE, \n        payload: { ...payload }\n    };\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Tag, Icon} from 'antd';\n// import Highlighter from 'react-highlight-words';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\n\nimport * as actionCreator from '../../store/actions/officeAdmin';\n// import { stat } from 'fs';\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  sorter: (a, b) => {\n    const aName = a.name; \n    const bName = b.name;\n    if (aName < bName) { \n      return -1;\n    } else if (aName > bName) { \n      return 1;\n    } else { \n      return 0\n    }\n  },\n  sortDirections: ['descend', 'ascend'],\n}, \n{\n  title: 'Email',\n  dataIndex: 'email'\n},\n{\n  title: 'Offices',\n  dataIndex: 'offices',\n  render: (offices => (\n        <span>\n          {offices.map(office => <Tag color=\"blue\" key={office.uid}>{office.name}</Tag>)}\n        </span>\n      ))\n},\n{\n  title: 'Office Admin For',  \n  dataIndex: 'officeAdmins',\n  render: (offices => (\n    <span>\n      {offices.map(office => <Tag color=\"blue\" key={office.uid}>{office.name}</Tag>)}\n    </span>\n  )),\n  filterMultiple: true,\n  onFilter: (value, record) => record.type.indexOf(value) === 0\n},  \n{\n  title: '',\n  key: 'more',\n  render: () => (\n    <IconButton>\n      <MoreIcon/>\n    </IconButton>\n  ),\n}];\n\nclass UsersTable extends React.Component {\n  state = {\n    searchText: '',\n  };\n\n   componentDidMount() { \n    this.props.loadUserList(this.props.currentOfficeUID);\n   }\n\n  render() {\n    return (\n      // customize empty state locale={{ emptyText: 'No Users'}}\n      <Table rowKey={record => record.uid.toString()} columns={columns} dataSource={this.props.userList} pagination={false} loading={this.props.isLoadingUserData}/>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.officeAdmin.userList, \n    currentOfficeUID: state.general.currentOfficeAdminUID, \n    isLoadingUserData: state.officeAdmin.isLoadingUserData\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadUserList: (officeUID) => dispatch(actionCreator.loadOfficeUsers(officeUID))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersTable);\n","import * as actionTypes from './actionTypes';\n\nexport const loadOfficeUsers = (officeUID) => { \n    return {\n        type: actionTypes.LOAD_OFFICE_USERS, \n        payload: { \n            officeUID: officeUID\n        }\n    };\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button } from 'antd';\nimport UsersTable from './usersTable';\nimport '../../App.css';\n// import UsersSideBar from './usersSideBar';\n\nclass UsersPage extends React.Component {\n    render() {\n        return (\n            <Row>\n                <Col className=\"wide-table\" span={24}>\n                    <div>\n                        <h1>Users</h1>\n                        <Button className=\"right-button\" type=\"primary\" >Add User</Button>\n                    </div>\n                    <UsersTable />  \n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default connect(null, null)(UsersPage);\n\n","import app from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/functions';\n// const app = require(\"firebase\");\n// require(\"firebase/functions\");\n\nconst prodConfig = {\n    apiKey: \"AIzaSyBPUBLiY-FCuqpJLVibdr-RoiUt4wzbaLE\",\n    authDomain: \"airspace-management-app.firebaseapp.com\",\n    databaseURL: \"https://airspace-management-app.firebaseio.com\",\n    projectId: \"airspace-management-app\",\n    storageBucket: \"airspace-management-app.appspot.com\",\n    messagingSenderId: \"927508779333\"\n  };\n  \n// User this when I want to set up a dev version\n//   const devConfig = {\n//     apiKey: process.env.REACT_APP_DEV_API_KEY,\n//     authDomain: process.env.REACT_APP_DEV_AUTH_DOMAIN,\n//     databaseURL: process.env.REACT_APP_DEV_DATABASE_URL,\n//     projectId: process.env.REACT_APP_DEV_PROJECT_ID,\n//     storageBucket: process.env.REACT_APP_DEV_STORAGE_BUCKET,\n//     messagingSenderId: process.env.REACT_APP_DEV_MESSAGING_SENDER_ID,\n//   };\n//  process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n\nvar config = prodConfig;\n\nclass Firebase {\n\n  constructor() {\n\n    if (!app.apps.length) {\n      app.initializeApp(config);\n    } \n    this.auth = app.auth();\n    this.functions = app.functions();     \n  }\n}\n\nexport default Firebase;","// import { FirebaseContext, withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\n// export {FirebaseContext, withFirebase };","import React, { Component } from 'react';\n// import { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Login from './components/Login/Login';\nimport NavBar from './components/NavBar/navbar';\nimport SideNavbar from './components/SideNavBar/sidenavbar';\nimport UsersPage from './components/UsersPage/usersPage';\nimport Firebase from './components/Firebase';\n\nimport * as generalActionCreators from './store/actions/general';\nimport * as authActionCreators from './store/actions/auth';\nimport {Row, Col, Icon} from 'antd';\nimport * as pageTitles from './pages/pageTitles';\n\nclass App extends Component {\n\n  componentWillMount() {\n    if (this.props.firebase === null) {\n      this.firebase = new Firebase()\n      this.props.setUpFirebase(this.firebase);\n    }\n  }\n\n  componentDidMount() {\n    const firebase = this.firebase || null;\n    if (firebase) {\n      const weakProps = this.props;\n      this.listener = firebase.auth.onAuthStateChanged(function(user) {\n        if (user) {\n          console.log('auth listener found user');\n          weakProps.setUpUser(user.uid);\n        } else {\n          console.log('auth listener did NOT find user');\n          weakProps.setUpUser(null);\n        }\n      });\n    } else {\n      console.log(\"firebase NOT set up in App.js render()\");\n      // this.props.setUpFirebase();\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  renderPageContent(pageName) {\n\n    switch (pageName) { \n      case pageTitles.homePageRegularUser: \n        return null\n      case pageTitles.userPageOfficeAdmin: \n        return (\n          <UsersPage />\n        );\n      default: \n          // return 404 page? \n          return null\n    }\n  }\n\n  render() {\n\n    // need to set state for employee or admin mode? which office?\n    // - need to setuser type ? figure out back end?\n    // need to set state for logged in in redux\n\n    if (this.props.user) { // logged in\n      return (\n        <div>\n          <Row>\n            <Col span={4}>\n              <SideNavbar />\n            </Col>\n            <Col span={20}>\n              <NavBar/>\n              {this.renderPageContent(this.props.currentPage)}\n            </Col>\n          </Row>\n        </div>\n      );\n    } else { // logged out\n\n      // Need to also remove ability to route to any other pages !!!\n      return (\n        <Login />\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.auth.user,\n    isLoading: state.general.isLoading,\n    error: state.general.error,\n    firebase: state.general.firebase,\n    currentPage: state.general.currentPage\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUpFirebase: (firebaseInstance) => dispatch(generalActionCreators.setUpFirebaseInstanceAction(firebaseInstance)),\n    setUpUser: (uid) => dispatch(authActionCreators.setUpUserAction(uid))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as storeFile from './store/store';\nimport App from './App'; \nimport { BrowserRouter }from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst finalApp = ( \n    <BrowserRouter>\n            <Provider store={storeFile.store}> \n                <PersistGate loading={null} persistor={storeFile.persistor}>\n                    <App />\n                </PersistGate>\n            </Provider>\n    </BrowserRouter>\n);\nReactDOM.render(finalApp, document.getElementById('root'));\n\n\n"],"sourceRoot":""}